{"version":3,"file":"index.es.js","sources":["../src/Screen/Math.jsx","../src/Screen/Screen.jsx","../src/Keyboard/appContext.js","../src/Value/Strategies/ValueContext.js","../src/Value/Strategies/contextFactory.js","../src/Value/ValueList.js","../src/keyConsts.js","../src/Keyboard/Component.jsx","../src/Key/Component.jsx","../src/Key/Key.jsx","../src/Keyboard/MapKeys.js","../src/Value/Value.js","../src/Value/Fraction.js","../src/Value/Dot.js","../src/Value/Operator.js","../src/Value/Exponent.js","../src/Keyboard/MapEvents.js","../src/Keyboard/keyboards.js","../src/Value/Strategies/Commands/BaseCommand.js","../src/Value/Strategies/Commands/Value/AddValue.js","../src/Value/Strategies/Commands/Value/ChangeValue.js","../src/Value/Strategies/ValueStrategy.js","../src/Value/Strategies/Commands/Fraction/ChangeValue.js","../src/Value/Strategies/FractionStrategy.js","../src/Value/Strategies/ExponentStrategy.js","../src/Keyboard/contextConfig.js","../src/Keyboard/withKeyboard.jsx","../src/Keyboard/Keyboard.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MathJax from \"react-mathjax\";\n\nexport default class Math extends React.Component {\n    static propTypes = {\n        value: PropTypes.string,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            load: true,\n            currentValue: \"\",\n        };\n\n        this.handleOnRender = this.handleOnRender.bind(this);\n        this.timeCursor = null;\n    }\n\n    handleOnRender() {\n        let { value } = this.props;\n\n        this.setState({\n            load: false,\n            currentValue: value,\n        });\n    }\n\n    componentWillUpdate(nextProps) {\n        if (nextProps.value != this.props.value) {\n            this.setState({ load: true });\n        }\n    }\n\n    componentDidMount() {\n        this.setCursor();\n    }\n\n    componentDidUpdate() {\n        this.setCursor();\n    }\n\n    setCursor() {\n        if (this.timeCursor) {\n            clearInterval(this.timeCursor);\n        }\n\n        let mathList = document.getElementsByClassName(\"math\");\n\n        for (let el of mathList) {\n            let mjxEls = el.getElementsByClassName(\"mjx-char\");\n\n            for (let mjx of mjxEls) {\n                if (mjx.innerHTML == \"âˆ£\") {\n                    mjx.style.fontSize = \"1em\";\n                    this.timeCursor = setInterval(() => {\n                        if (mjx.style.visibility == \"hidden\") {\n                            mjx.style.visibility = \"visible\";\n                        } else {\n                            mjx.style.visibility = \"hidden\";\n                        }\n                    }, 500);\n                }\n\n                mjx.parentElement.style.marginLeft = \"0\";\n            }\n        }\n    }\n\n    getStyle(load) {\n        return { display: load ? \"none\" : \"block\" };\n    }\n\n    render() {\n        let { value } = this.props;\n        let { currentValue, load } = this.state;\n\n        return (\n            <React.Fragment>\n                <div style={this.getStyle(load)} className=\"math\">\n                    <MathJax.Node formula={value} onRender={this.handleOnRender} />\n                </div>\n\n                <div style={this.getStyle(!load)} className=\"math\">\n                    <MathJax.Node formula={currentValue} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PropTypes from \"prop-types\";\nimport Math from \"./Math\";\nimport { Backspace } from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = () => ({\n    root: {\n        height: \"150px\",\n        padding: \"1em 2em\",\n    },\n    icon: {\n        float: \"right\",\n    },\n    screen: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n});\n\nclass Screen extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        screenValue: PropTypes.object,\n        onKeyUp: PropTypes.func,\n    };\n\n    renderValue() {\n        let { screenValue } = this.props;\n\n        if (screenValue) {\n            return (<Math value={screenValue.last().getTeX()} />);\n        }\n\n        return (<span>Degite um valor</span>);\n    }\n\n    render() {\n        let { classes, onKeyUp } = this.props;\n\n        return (\n            <Grid container onKeyUp={onKeyUp} className={classes.root} spacing={0}>\n                <Grid item xs={6}>\n                    <span>LIMPAR</span>\n                </Grid>\n                <Grid item xs={6}>\n                    <Backspace className={classes.icon} fontSize=\"small\"/>\n                </Grid>\n                <Grid item xs={12} className={classes.screen}>\n                    {this.renderValue()}\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(styles)(Screen);\n","export let appConfig = {};\n\nexport function init(config) {\n    appConfig = config;\n    Object.freeze(appConfig);\n}\n","export default class ValueContext {\n\n    /**\n     *\n     * @param {Object} strategy\n     */\n    constructor (strategy) {\n        this.strategy = strategy;\n    }\n\n    /**\n     *\n     * @param {Object} value\n     *\n     * @returns {Object}\n     */\n    addValue (value) {\n        return this.strategy.addValue(value);\n    }\n\n    /**\n     *\n     * @returns {any}\n     */\n    changeValue (direction) {\n        return this.strategy.changeValue(direction);\n    }\n}\n","import { appConfig } from \"../../Keyboard/appContext\";\nimport ValueContext from \"./ValueContext\";\n\nexport default (value) => {\n    let context = appConfig[value.getContext()];\n    let strategy = new context(value);\n\n    return new ValueContext(strategy);\n};\n","import contextFactory from \"./Strategies/contextFactory\";\n\nexport const NEXT_VALUE = \"nextValue\";\nexport const PREV_VALUE = \"prevValue\";\n\nexport default class ValueList {\n    /**\n     *\n     * @param {Object} value\n     */\n    constructor(value) {\n        this.value = value;\n        this.boot();\n    }\n\n    /**\n     * Boot the instance\n     */\n    boot() {\n        if (!this.value.cursor) {\n            this.value.cursor = true;\n        }\n    }\n\n    /**\n     * set the current value to next value\n     */\n    nextValue() {\n        let value = this.getContext().changeValue(NEXT_VALUE);\n\n        if (value === null) return value;\n        this.value = value;\n\n        return true;\n    }\n\n    /**\n     * set the current value to prev value\n     */\n    prevValue() {\n        let value = this.getContext().changeValue(PREV_VALUE);\n\n        if (value === null) return value;\n        this.value = value;\n\n        return true;\n    }\n\n    /**\n     *  add value to list\n     *\n     * @param {Object} value\n     */\n    addValue(value) {\n        this.value = this.getContext().addValue(value);\n    }\n\n    /**\n     * unfocus value list\n     */\n    unfocus() {\n        this.value.cursor = false;\n    }\n\n    /**\n     * focus value list\n     */\n    focus() {\n        this.value.cursor = true;\n    }\n\n    /**\n     * Focus last value\n     */\n    focusLast() {\n        this.unfocus();\n        this.value = this.last();\n        this.focus();\n    }\n\n    /**\n     * Focus first value\n     */\n    focusFirst() {\n        this.unfocus();\n        this.value = this.first();\n        this.focus();\n    }\n\n    /**\n     *  returns the last Value from list\n     *\n     * @returns {Object}\n     */\n    last() {\n        let value = this.value;\n        let nextValue = null;\n\n        while ((nextValue = value.nextValue)) {\n            value = nextValue;\n        }\n\n        return value;\n    }\n\n    /**\n     * returns the first Value from list\n     *\n     * @returns {Object}\n     */\n    first() {\n        let value = this.value;\n        let prevValue = null;\n\n        while ((prevValue = value.prevValue)) {\n            value = prevValue;\n        }\n\n        return value;\n    }\n\n    getContext() {\n        return contextFactory(this.value);\n    }\n}\n","export const LEFT = 37;\nexport const RIGHT = 39;\n","import React, { Component as ReactComponet } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport green from \"@material-ui/core/colors/green\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MathJax from \"react-mathjax\";\nimport Screen from \"../Screen\";\nimport ValueList from \"../Value/ValueList\";\nimport { init } from \"./appContext\";\n\nimport { LEFT, RIGHT } from \"../keyConsts\";\n\nconst styles = () => ({\n    container: {\n        backgroundColor: green[\"A200\"],\n    },\n});\n\nconst mathJaxConfig = {\n    tex2jax: {\n        inlineMath: []\n    },\n    showMathMenu: false,\n    showMathMenuMSIE: false,\n    \"fast-preview\": {\n        disabled: true\n    },\n    showProcessingMessages: false,\n    styles: {\n        \"#MathJax_Message\": {display: \"none\"},\n        \"#MathJax_MSIE_Frame\": {display: \"none\"}\n    }\n};\n\nclass Component extends ReactComponet {\n    static propTypes = {\n        keyboard: PropTypes.array.isRequired,\n        mapKeys: PropTypes.object.isRequired,\n        mapEvents: PropTypes.object.isRequired,\n        contextConfig: PropTypes.object.isRequired,\n        classes: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            valueList: null,\n        };\n\n        this.clickBuntton = this.clickBuntton.bind(this);\n        this.handleKeyUp = this.handleKeyUp.bind(this);\n        this.props.mapKeys.setCallback(this.clickBuntton);\n        this.props.mapKeys.setMap();\n        this.props.mapEvents.setMap();\n        init(this.props.contextConfig);\n    }\n\n    clickBuntton(btn) {\n        let { mapEvents } = this.props;\n        let { valueList } = this.state;\n        let nextValue = mapEvents.get(btn)();\n\n        if (!valueList) {\n            valueList = new ValueList(nextValue);\n        } else {\n            valueList.addValue(nextValue);\n        }\n\n        this.setState({ valueList });\n    }\n\n    handleKeyUp({ keyCode }) {\n        let { valueList } = this.state;\n\n        if (keyCode == LEFT) {\n            valueList.prevValue();\n        } else if (keyCode == RIGHT) {\n            valueList.nextValue();\n        } else {\n            return;\n        }\n\n        this.setState({ valueList });\n    }\n\n    render() {\n        let { keyboard, mapKeys, classes } = this.props;\n        let { valueList } = this.state;\n\n        return (\n            <Paper onKeyUp={this.handleKeyUp}>\n                <MathJax.Provider options={mathJaxConfig}>\n                    <Screen screenValue={valueList} onKeyUp={this.handleKeyUp}/>\n                    <Grid container className={classes.container} spacing={0}>\n                        {keyboard.map(row => row.map(btn => (\n                            <Grid key={btn} item xs={Math.ceil(12/row.length)}>\n                                {mapKeys.get(btn)}\n                            </Grid>\n                        )))}\n                    </Grid>\n                </MathJax.Provider>\n            </Paper>\n        );\n    }\n}\n\nexport default withStyles(styles)(Component);\n","import React, { Component as ReactComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport MathJax from \"react-mathjax\";\n\nexport default class Component extends ReactComponent {\n    static propTypes = {\n        text: PropTypes.string.isRequired,\n        onClick: PropTypes.func.isRequired,\n        value: PropTypes.string.isRequired,\n        classes: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        const { onClick, value } = this.props;\n        onClick(value);\n    }\n\n    render() {\n        const { text, classes } = this.props;\n\n        return (\n            <Button className={classes.button} onClick={this.handleClick}>\n                <MathJax.Node formula={text} />\n            </Button>\n        );\n    }\n}\n","import { withStyles } from \"@material-ui/core/styles\";\nimport Component from \"./Component\";\n\nconst styles = () => ({\n    button: {\n        margin: 0,\n        width: \"100%\",\n        height: \"68px\",\n    },\n    input: {\n        display: \"none\",\n    },\n});\n\nexport default withStyles(styles)(Component);\n","import React from \"react\";\nimport Key from \"../Key\";\n\nexport class MapKeys {\n    constructor() {\n        this.map = new Map();\n    }\n\n    setCallback(callback) {\n        this.callback = callback;\n    }\n\n    get(key) {\n        return this.map.get(key);\n    }\n\n    set(key, val) {\n        return this.map.set(key, val);\n    }\n\n    getComponent(text, value) {\n        return (\n            <Key key={text + value} text={text} value={value} onClick={this.callback} />\n        );\n    }\n\n    setMap() {\n        this.setNumbersButtons();\n        this.set(\"=\", this.getComponent(\"=\", \"=\"));\n        this.set(\",\", this.getComponent(\",\", \",\"));\n        this.set(\"+\", this.getComponent(\"+\", \"+\"));\n        this.set(\"-\", this.getComponent(\"-\", \"-\"));\n        this.set(\"*\", this.getComponent(\"*\", \"*\"));\n        this.set(\"/\", this.getComponent(\"\\\\frac{x}{y}\", \"/\"));\n        this.set(\"(\", this.getComponent(\"(\", \"(\"));\n        this.set(\")\", this.getComponent(\")\", \")\"));\n        this.set(\"^\", this.getComponent(\"x^y\", \"^\"));\n    }\n\n    setNumbersButtons() {\n        for (let index = 0; index <= 9; index++) {\n            this.set(\n                index.toString(),\n                this.getComponent(index.toString(), index.toString())\n            );\n        }\n    }\n}\n\nexport default new MapKeys();\n","export default class Value {\n    constructor(operator, prevValue) {\n        this.nextValue = null;\n        this.prevValue = prevValue;\n        this.operator = operator;\n        this.cursor = false;\n    }\n\n    toggleCursor() {\n        this.cursor = !this.cursor;\n    }\n\n    setNextValue(nextValue) {\n        if (this.nextValue) {\n            nextValue.nextValue = this.nextValue;\n            nextValue.nextValue.setPrevValue(nextValue);\n        }\n\n        this.nextValue = nextValue;\n    }\n\n    getContext() {\n        return \"value\";\n    }\n\n    setPrevValue(prevValue) {\n        this.prevValue = prevValue;\n    }\n\n    value() {\n        return this.operator;\n    }\n\n    valueTeX() {\n        if (this.cursor) {\n            return this.value() + \"\\\\mid\";\n        }\n\n        return this.value();\n    }\n\n    getValue() {\n        if (!this.prevValue) {\n            return this.value();\n        }\n\n        return this.prevValue.getValue() + this.value();\n    }\n\n    getTeX() {\n        if (!this.prevValue) {\n            return this.valueTeX();\n        }\n\n        return this.prevValue.getTeX() + this.valueTeX();\n    }\n}\n","import Value from \"./Value\";\nimport ValueList from \"./ValueList\";\n\nexport const DIVIDER = \"DIVIDER\";\nexport const DIVIDEND = \"DIVIDEND\";\n\nexport default class Fraction extends Value {\n    /**\n     *\n     * @param {Object} prevValue\n     */\n    constructor(prevValue) {\n        super(\"/\", prevValue);\n        this.divider = null;\n\n        let value = new Value(\"\");\n        value.toggleCursor();\n\n        this.dividend = new ValueList(value);\n        this.currentCursor = DIVIDEND;\n    }\n\n    /**\n     *  Add value in divider\n     *\n     * @param {Object} divider\n     */\n    addDivider(divider) {\n        if (this.currentCursor === DIVIDEND) {\n            this.unfocus();\n            this.currentCursor = DIVIDER;\n        }\n\n        if (!this.divider) {\n            return this.divider = new ValueList(divider);\n        }\n\n        this.divider.addValue(divider);\n    }\n\n    /**\n     *  Add value in dividend\n     *\n     * @param {Object} dividend\n     */\n    addDividend(dividend) {\n        if (this.currentCursor === DIVIDER) {\n            this.unfocus();\n            this.currentCursor = DIVIDEND;\n        }\n\n        this.dividend.addValue(dividend);\n    }\n\n    /**\n     *  Get context key\n     *\n     * @returns {String}\n     */\n    getContext() {\n        return \"fraction\";\n    }\n\n    /**\n     * unfocus fraction\n     *\n     */\n    unfocus() {\n        if (this.dividend) {\n            this.dividend.unfocus();\n        }\n\n        if (this.divider) {\n            this.divider.unfocus();\n        }\n\n        this.currentCursor = null;\n    }\n\n    /**\n     * Set cursor in operator\n     *\n     * @param {String} operator\n     */\n    setCursor(operator) {\n        if (operator === DIVIDER) {\n            if (this.divider) {\n                this.divider.focusFirst();\n            } else {\n                this.divider = new ValueList(new Value(\"\"));\n            }\n\n            this.currentCursor = DIVIDER;\n        } else {\n            if (this.dividend) {\n                this.dividend.focusLast();\n            } else {\n                this.dividend = new ValueList(new Value(\"\"));\n            }\n\n            this.currentCursor = DIVIDEND;\n        }\n    }\n\n    /**\n     * get the current value\n     *\n     * @returns {Object}\n     */\n    getCurrentValue() {\n        if (this.currentCursor == DIVIDER) {\n            return this.divider.value;\n        }\n\n        return this.dividend.value;\n    }\n\n    /**\n     *  Change value direction\n     *\n     * @param {String} direction\n     * @returns {Object}\n     */\n    changeValue(direction) {\n        if (this.currentCursor == DIVIDER) {\n            return this.divider[direction]();\n        }\n\n        return this.dividend[direction]();\n    }\n\n    /**\n     * set prentheses\n     *\n     * @param {String} value\n     *\n     * @returns {String}\n     */\n    setParentheses(value) {\n        return value.length > 1 ? `[${value}]` : value;\n    }\n\n    /**\n     * get value\n     *\n     * @returns {String}\n     */\n    value() {\n        let dividend = this.setParentheses(this.getDividendValue());\n        let divider = this.setParentheses(this.getDividerValue());\n\n        return `${dividend}/${divider}`;\n    }\n\n    /**\n     * get TEX value\n     *\n     * @returns {String}\n     */\n    valueTeX() {\n        return `\\\\frac{${this.getDividendTeX()}}{${this.getDividerTeX()}}`;\n    }\n\n    /**\n     * get divider TEX\n     *\n     * @returns {String}\n     */\n    getDividerTeX() {\n        return this.divider ?\n            this.divider.last().getTeX() : \"\";\n    }\n\n    /**\n     * get dividend TEX\n     *\n     * @returns {String}\n     */\n    getDividendTeX() {\n        return this.dividend ?\n            this.dividend.last().getTeX() : \"\";\n    }\n\n    /**\n     * get divider Value\n     *\n     * @returns {String}\n     */\n    getDividerValue() {\n        return this.divider ?\n            this.divider.last().getValue() : \"\";\n    }\n\n    /**\n     * get dividend Value\n     *\n     * @returns {String}\n     */\n    getDividendValue() {\n        return this.dividend ?\n            this.dividend.last().getValue() : \"\";\n    }\n}\n","import Value from \"./Value\";\n\nexport default class Dot extends Value {\n    constructor(prevValue) {\n        super(\".\", prevValue);\n    }\n\n    valueTeX() {\n        if (this.cursor) {\n            return \",\\\\mid\";\n        }\n\n        return \",\";\n    }\n}\n","import Value from \"./Value\";\n\nexport default class Operator extends Value {\n    value() {\n        return \" \" + this.operator;\n    }\n\n    getValue() {\n        if (!this.prevValue) {\n            return this.value() + \" \";\n        }\n\n        return this.prevValue.getValue() + this.value() + \" \";\n    }\n\n    getTeX() {\n        if (!this.prevValue) {\n            return this.valueTeX() + \" \";\n        }\n\n        return this.prevValue.getTeX() + this.valueTeX() + \" \";\n    }\n}\n","import Value from \"./Value\";\nimport ValueList from \"./ValueList\";\n\nexport default class Exponent extends Value {\n    /**\n     *\n     * @param {Object} prevValue\n     */\n    constructor(prevValue) {\n        super(\"^\", prevValue);\n\n        let value = new Value(\"\");\n        value.toggleCursor();\n\n        this.valueList = new ValueList(value);\n    }\n\n    toggleCursor() {\n        super.toggleCursor();\n\n        if (this.cursor) {\n            this.valueList.focusLast();\n        }\n    }\n\n    /**\n     *\n     * @param {Object} value\n     */\n    addValue(value) {\n        this.valueList.addValue(value);\n    }\n\n    /**\n     * unfocus potentiation\n     *\n     */\n    unfocus() {\n        this.valueList.unfocus();\n    }\n\n    /**\n     * Get value\n     *\n     * @returns {String}\n     */\n    value() {\n        return `**[${this.valueList.last().getValue()}]`;\n    }\n\n    /**\n     * Get TEX value\n     *\n     * @returns {String}\n     */\n    valueTeX() {\n        return `^{${this.valueList.last().getTeX()}}`;\n    }\n\n    /**\n     *  Get context key\n     *\n     * @returns {String}\n     */\n    getContext() {\n        return \"exponent\";\n    }\n}\n","import Value from \"../Value/Value\";\nimport Fraction from \"../Value/Fraction\";\nimport Dot from \"../Value/Dot\";\nimport Operator from \"../Value/Operator\";\nimport Exponent from \"../Value/Exponent\";\n\nclass MapEvents {\n    constructor() {\n        this.map = new Map();\n    }\n\n    set(key, callback) {\n        this.map.set(key, callback);\n    }\n\n    get(key) {\n        return this.map.get(key);\n    }\n\n    setMap() {\n        this.setNumbersButtons();\n        this.set(\"=\", (value) => (new Operator(\"=\", value)));\n        this.set(\",\", (value) => (new Dot(value)));\n        this.set(\"+\", (value) => (new Operator(\"+\", value)));\n        this.set(\"-\", (value) => (new Operator(\"-\", value)));\n        this.set(\"*\", (value) => (new Operator(\"*\", value)));\n        this.set(\"/\", (value) => (new Fraction(value)));\n        this.set(\"(\", (value) => (new Value(\"(\", value)));\n        this.set(\")\", (value) => (new Value(\")\", value)));\n        this.set(\"^\", (value) => (new Exponent(value)));\n    }\n\n    setNumbersButtons() {\n        for (let index = 0; index <= 9; index++) {\n            this.set(\n                index.toString(),\n                (value) => (new Value(index.toString(), value))\n            );\n        }\n    }\n}\n\nexport default new MapEvents();\n","export const defaultKeyboard = [\n    [\"1\", \"2\", \"3\", \"+\"],\n    [\"4\", \"5\", \"6\", \"-\"],\n    [\"7\", \"8\", \"9\", \"*\"],\n    [\",\", \"0\", \"=\", \"/\"],\n    [\"(\", \")\", \"^\"],\n];\n","export default class BaseCommand {\n    /**\n     *\n     * @param {Object} currentValue\n     */\n    constructor(currentValue) {\n        this.currentValue = currentValue;\n    }\n\n    /**\n     * @return {Object}\n     */\n    execute() {\n        throw \"Method not implemented\";\n    }\n\n    /**\n     * @return {boolean}\n     */\n    isEmptyValue() {\n        return this.currentValue.operator === \"\";\n    }\n\n    /**\n     * @return {boolean}\n     */\n    nextIsNull() {\n        return this.currentValue.nextValue === null ||\n            this.currentValue.nextValue === undefined;\n    }\n\n    /**\n     * @return {boolean}\n     */\n    prevIsNull() {\n        return this.currentValue.prevValue === null ||\n            this.currentValue.prevValue === undefined;\n    }\n}\n","import BaseCommand from \"../BaseCommand\";\n\nexport default class AddValue extends BaseCommand {\n\n    /**\n     *\n     * @param {Object} currentValue\n     * @param {Object} newValue\n     */\n    constructor(currentValue, newValue) {\n        super(currentValue);\n        this.newValue = newValue;\n    }\n\n    /**\n     * @return {Object}\n     */\n    execute() {\n        if (this.isEmptyValue()) {\n            this.replaceValue();\n        } else {\n            this.addValue();\n        }\n\n        this.newValue.cursor = true;\n\n        return this.newValue;\n    }\n\n    /**\n     *\n     */\n    replaceValue() {\n        let nextValue = this.currentValue.nextValue;\n        let prevValue = this.currentValue.prevValue;\n\n        if (nextValue) {\n            nextValue.prevValue = this.newValue;\n            this.newValue.nextValue = nextValue;\n        }\n\n        if (prevValue) {\n            prevValue.nextValue = this.newValue;\n            this.newValue.prevValue = prevValue;\n        }\n    }\n\n    /**\n     *\n     */\n    addValue() {\n        this.newValue.setPrevValue(this.currentValue);\n        this.currentValue.setNextValue(this.newValue);\n        this.currentValue.cursor = false;\n    }\n}\n","import Value from \"../../../Value\";\nimport BaseCommand from \"../BaseCommand\";\nimport { NEXT_VALUE, PREV_VALUE } from \"../../../ValueList\";\nimport { DIVIDEND, DIVIDER } from \"../../../Fraction\";\n\nexport default class ChangeValue extends BaseCommand {\n    /**\n     *\n     * @param {Object} currentValue\n     * @param {string} direction\n     */\n    constructor(currentValue, direction) {\n        super(currentValue);\n        this.direction = direction;\n    }\n\n    /**\n     * @returns {Object}\n     */\n    execute() {\n        if (this.direction === NEXT_VALUE) {\n            return this.nextValue();\n        }\n\n        return this.prevValue();\n    }\n\n    /**\n     * @returns {Object}\n     */\n    nextValue() {\n        if (this.nextIsNull()) return null;\n\n        let nextValue = this.currentValue.nextValue;\n\n        if (this.isEmptyValue()) {\n            if (this.currentValue.prevValue) {\n                nextValue.setPrevValue(this.currentValue.prevValue);\n                nextValue.prevValue.nextValue = nextValue;\n            } else {\n                nextValue.prevValue = undefined;\n            }\n        } else {\n            nextValue.prevValue.cursor = false;\n        }\n\n        nextValue.toggleCursor();\n\n        return this.setFraction(nextValue);\n    }\n\n    /**\n     * @returns {Object}\n     */\n    prevValue() {\n        if (this.isEmptyValue() && this.prevIsNull()) return null;\n\n        let prevValue = this.currentValue.prevValue;\n\n        if (this.prevIsNull()) {\n            prevValue = new Value(\"\");\n            prevValue.setNextValue(this.currentValue);\n        }\n\n        if (this.isEmptyValue()) {\n            if (this.currentValue.nextValue) {\n                this.currentValue.nextValue.setPrevValue(prevValue);\n                prevValue.nextValue = this.currentValue.nextValue;\n            } else {\n                prevValue.nextValue = undefined;\n            }\n        } else {\n            prevValue.nextValue.prevValue = prevValue;\n            prevValue.nextValue.cursor = false;\n        }\n\n        prevValue.toggleCursor();\n\n        return this.setFraction(prevValue);\n    }\n\n    setFraction(value) {\n        let className = value.constructor.name;\n\n        if (className !== \"Fraction\") return value;\n        value.unfocus();\n\n        if (this.direction === PREV_VALUE && this.isEmptyValue()) {\n            value.setCursor(DIVIDER);\n            value.divider.focusLast();\n\n            return value;\n        }\n\n        if (this.direction === PREV_VALUE) {\n            let newValue = new Value(\"\");\n            value.cursor = false;\n            value.setNextValue(newValue);\n            newValue.setPrevValue(value);\n            newValue.cursor = true;\n\n            return newValue;\n        }\n\n        value.setCursor(DIVIDEND);\n        value.dividend.focusFirst();\n\n        return value;\n    }\n}\n","import AddValue from \"./Commands/Value/AddValue\";\nimport ChangeValue from \"./Commands/Value/ChangeValue\";\n\nexport default class ValueStrategy {\n    /**\n     *\n     * @param {Object} currentValue\n     */\n    constructor(currentValue) {\n        this.currentValue = currentValue;\n    }\n\n    /**\n     *\n     * @param {Object} value\n     *\n     * @returns {Object}\n     */\n    addValue(value) {\n        let addValue = new AddValue(this.currentValue, value);\n        return addValue.execute();\n    }\n\n    /**\n     *\n     * @returns {any}\n     */\n    changeValue(direction) {\n        let changeValue = new ChangeValue(this.currentValue, direction);\n        return changeValue.execute();\n    }\n}\n","import BaseCommand from \"../BaseCommand\";\nimport { DIVIDEND, DIVIDER } from \"../../../Fraction\";\nimport { NEXT_VALUE } from \"../../../ValueList\";\n\n/**\n * Get the current value\n *\n * @returns {Object}\n */\nconst getCurrentValue = (fraction) => {\n    let valueList = fraction.divider;\n\n    if (fraction.currentCursor === DIVIDEND) {\n        valueList = fraction.dividend;\n    }\n\n    return valueList.value;\n};\n\nexport default class ChangeValue extends BaseCommand {\n    /**\n     *\n     * @param {Object} fraction\n     * @param {string} direction\n     */\n    constructor(fraction, direction) {\n        super(getCurrentValue(fraction));\n        this.fraction = fraction;\n        this.direction = direction;\n    }\n\n    /**\n     *\n     */\n    execute() {\n        if (this.direction === NEXT_VALUE) {\n            return this.nextValue();\n        }\n\n        return this.prevValue();\n    }\n\n    /**\n     * set next value\n     *\n     * @returns {Object}\n     */\n    nextValue() {\n        if (this.isDividend()) {\n            if (this.nextIsNull()) {\n                this.fraction.unfocus();\n                this.fraction.setCursor(DIVIDER);\n            } else {\n                this.fraction.dividend.nextValue();\n            }\n\n            return this.fraction;\n        }\n\n        if (this.nextIsNull()) {\n            this.fraction.unfocus();\n            return null;\n        }\n\n        this.fraction.divider.nextValue();\n\n        return this.fraction;\n    }\n\n    /**\n     * set prev value\n     *\n     * @returns {Object}\n     */\n    prevValue() {\n        if (this.isDividend()) {\n            if (this.prevIsNull() && this.isEmptyValue()) {\n                this.fraction.unfocus();\n                return null;\n            }\n\n            this.fraction.dividend.prevValue();\n            return this.fraction;\n        }\n\n        if (this.prevIsNull()) {\n            if (this.isEmptyValue()) {\n                if (this.nextIsNull()) {\n                    this.fraction.divider = null;\n                } else {\n                    let value = this.fraction.divider.value;\n                    let next = value.nextValue;\n                    next.prevValue = null;\n                    this.fraction.divider.value = next;\n                    this.fraction.divider.focus();\n                    this.fraction.unfocus();\n                }\n\n                this.fraction.setCursor(DIVIDEND);\n            } else {\n                this.fraction.divider.prevValue();\n            }\n        } else {\n            this.fraction.divider.prevValue();\n        }\n\n        return this.fraction;\n    }\n\n    /**\n     * is dividend?\n     *\n     * @returns {boolean}\n     */\n    isDividend() {\n        return this.fraction.currentCursor === DIVIDEND;\n    }\n}\n","import ValueStrategy from \"./ValueStrategy\";\nimport Value from \"../Value\";\nimport { DIVIDER } from \"../Fraction\";\nimport ChangeValue from \"./Commands/Fraction/ChangeValue\";\nimport { NEXT_VALUE } from \"../ValueList\";\n\nexport default class FractionStrategy extends ValueStrategy {\n    /**\n     *\n     * @param {Object} value\n     */\n    addValue(value) {\n        if (this.currentValue.currentCursor === DIVIDER) {\n            this.currentValue.addDivider(value);\n        } else {\n            this.currentValue.addDividend(value);\n        }\n\n        return this.currentValue;\n    }\n\n    /**\n     *\n     * @returns {Object}\n     */\n    changeValue(direction) {\n        let value = this.currentValue.getCurrentValue();\n\n        if (value.getContext() !== \"value\") {\n            this.currentValue.changeValue(direction);\n            return this.currentValue;\n        }\n\n        let command = new ChangeValue(this.currentValue, direction);\n        let result = command.execute();\n\n        if (result) return result;\n\n        if (direction === NEXT_VALUE) {\n            return this.changeToNext();\n        }\n\n        return this.changeToPrev();\n    }\n\n    /**\n     *\n     * @returns {Object}\n     */\n    changeToNext() {\n        let newValue = new Value(\"\", this.currentValue);\n        newValue.cursor = true;\n\n        this.currentValue.setNextValue(newValue);\n\n        return newValue;\n    }\n\n    changeToPrev() {\n        if (this.currentValue.prevValue) {\n            this.currentValue.cursor = false;\n            this.currentValue.prevValue.cursor = true;\n\n            return this.currentValue.prevValue;\n        }\n\n        let newValue = new Value(\"\");\n        newValue.setNextValue(this.currentValue);\n        newValue.cursor = true;\n\n        this.currentValue.setPrevValue(newValue);\n\n        return newValue;\n    }\n}\n","import ValueStrategy from \"./ValueStrategy\";\nimport { NEXT_VALUE } from \"../ValueList\";\nimport Value from \"../Value\";\n\nexport default class ExponentStrategy extends ValueStrategy {\n    /**\n     *\n     * @param {Object} value\n     * @returns {Object}\n     */\n    addValue(value) {\n        this.currentValue.addValue(value);\n        return this.currentValue;\n    }\n\n    /**\n     *\n     * @returns {any}\n     */\n    changeValue(direction) {\n        if (direction == NEXT_VALUE) {\n            return this.nextValue();\n        }\n\n        return this.prevValue();\n    }\n\n    nextValue() {\n        let currentValue = this.currentValue.valueList.value;\n        let nextValue = currentValue.nextValue;\n\n        if (nextValue) {\n            this.currentValue.valueList.nextValue();\n            return this.currentValue;\n        }\n\n        if (currentValue.getContext() !== \"value\") {\n            this.currentValue.valueList.nextValue();\n            return this.currentValue;\n        }\n\n        nextValue = new Value(\"\", this.currentValue);\n        this.currentValue.unfocus();\n        this.currentValue.cursor = false;\n        this.currentValue.setNextValue(nextValue);\n        nextValue.cursor = true;\n\n        return nextValue;\n    }\n\n    prevValue() {\n        let currentValue = this.currentValue.valueList.value;\n        let prevValue = currentValue.prevValue;\n\n        if (prevValue) {\n            this.currentValue.valueList.prevValue();\n            return this.currentValue;\n        }\n\n        if (currentValue.getContext() !== \"value\") {\n            this.currentValue.valueList.prevValue();\n            return this.currentValue;\n        }\n\n        if (currentValue.operator === \"\") {\n            currentValue.nextValue.prevValue = undefined;\n            this.currentValue.valueList.value = currentValue.nextValue;\n            this.currentValue.unfocus();\n            this.currentValue.cursor = false;\n\n            return this.getPrev();\n        }\n\n        let newValue = new Value(\"\");\n        newValue.setNextValue(currentValue);\n        currentValue.setPrevValue(newValue);\n\n        this.currentValue.valueList.prevValue();\n        return this.currentValue;\n    }\n\n    getPrev() {\n        let prevValue = this.currentValue.prevValue;\n\n        if (!prevValue) {\n            prevValue = new Value(\"\");\n            prevValue.setNextValue(this.currentValue);\n        }\n\n        prevValue.cursor = true;\n\n        return prevValue;\n    }\n}\n","import FractionStrategy from \"../Value/Strategies/FractionStrategy\";\nimport ValueStrategy from \"../Value/Strategies/ValueStrategy\";\nimport ExponentStrategy from \"../Value/Strategies/ExponentStrategy\";\n\nexport default {\n    \"fraction\": FractionStrategy,\n    \"value\": ValueStrategy,\n    \"exponent\": ExponentStrategy,\n};\n","import React, { Component as ReactComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport defaultMapKeys from \"./MapKeys\";\nimport defaultMapEvents from \"./MapEvents\";\nimport { defaultKeyboard } from \"./keyboards\";\nimport contextConfig from \"./contextConfig\";\n\nexport default () => {\n    let mapKeys = defaultMapKeys;\n    let keyboard = defaultKeyboard;\n    let mapEvents = defaultMapEvents;\n\n    return (WrappedComponent) => class WithKeyboard extends ReactComponent {\n        static propTypes = {\n            keyboard: PropTypes.array,\n            mapKeys: PropTypes.object,\n            mapEvents: PropTypes.object,\n            contextConfig: PropTypes.object,\n        };\n\n        render() {\n            let props = {\n                keyboard,\n                mapKeys,\n                mapEvents,\n                contextConfig,\n                ...this.props\n            };\n\n            return (\n                <WrappedComponent {...props} />\n            );\n        }\n    };\n};\n","import Component from \"./Component\";\nimport withKeyboard from \"./withKeyboard\";\n\nexport default withKeyboard()(Component);\n"],"names":["Math","props","state","handleOnRender","bind","timeCursor","value","setState","nextProps","load","setCursor","mathList","document","getElementsByClassName","el","mjxEls","mjx","innerHTML","style","fontSize","setInterval","visibility","parentElement","marginLeft","display","currentValue","getStyle","React","Component","propTypes","PropTypes","string","styles","Screen","screenValue","last","getTeX","classes","onKeyUp","root","icon","screen","renderValue","object","isRequired","func","withStyles","appConfig","init","config","freeze","ValueContext","strategy","addValue","direction","changeValue","context","getContext","NEXT_VALUE","PREV_VALUE","ValueList","boot","cursor","unfocus","focus","first","nextValue","prevValue","contextFactory","LEFT","RIGHT","green","mathJaxConfig","clickBuntton","handleKeyUp","mapKeys","setCallback","setMap","mapEvents","contextConfig","btn","valueList","get","keyCode","keyboard","container","map","row","ceil","length","ReactComponet","array","handleClick","onClick","text","button","ReactComponent","MapKeys","Map","callback","key","val","set","setNumbersButtons","getComponent","index","toString","Value","operator","setPrevValue","getValue","valueTeX","DIVIDER","DIVIDEND","Fraction","divider","toggleCursor","dividend","currentCursor","focusFirst","focusLast","setParentheses","getDividendValue","getDividerValue","getDividendTeX","getDividerTeX","Dot","Operator","Exponent","MapEvents","defaultKeyboard","BaseCommand","undefined","AddValue","newValue","isEmptyValue","replaceValue","setNextValue","ChangeValue","nextIsNull","setFraction","prevIsNull","className","constructor","name","ValueStrategy","execute","getCurrentValue","fraction","isDividend","next","FractionStrategy","addDivider","addDividend","command","result","changeToNext","changeToPrev","ExponentStrategy","getPrev","defaultMapKeys","defaultMapEvents","WrappedComponent","withKeyboard"],"mappings":"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"}