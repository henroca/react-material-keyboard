{"version":3,"file":"index.es.js","sources":["../src/Screen/Math.jsx","../src/Screen/Screen.jsx","../src/Keyboard/appContext.js","../src/Value/Strategies/ValueContext.js","../src/Value/Strategies/contextFactory.js","../src/Value/ValueList.js","../src/keyConsts.js","../src/Value/Value.js","../src/Value/Fraction.js","../src/Value/Exponent.js","../src/Value/Root.js","../src/Value/parser.js","../src/Keyboard/Component.jsx","../src/Key/Component.jsx","../src/Key/Key.jsx","../src/Keyboard/MapKeys.js","../src/Value/Dot.js","../src/Value/Operator.js","../src/Keyboard/MapEvents.js","../src/Keyboard/keyboards.js","../src/Value/Strategies/Commands/BaseCommand.js","../src/Value/Strategies/Commands/Value/AddValue.js","../src/Value/Strategies/Commands/Value/ChangeValue.js","../src/Value/Strategies/ValueStrategy.js","../src/Value/Strategies/Commands/Fraction/ChangeValue.js","../src/Value/Strategies/FractionStrategy.js","../src/Value/Strategies/ExponentStrategy.js","../src/Value/Strategies/Commands/Root/ChangeValue.js","../src/Value/Strategies/RootStrategy.js","../src/Keyboard/contextConfig.js","../src/Keyboard/withKeyboard.jsx","../src/Keyboard/Keyboard.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MathJax from \"react-mathjax\";\n\nexport default class Math extends React.Component {\n    static propTypes = {\n        value: PropTypes.string,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            load: true,\n            currentValue: \"\",\n        };\n\n        this.handleOnRender = this.handleOnRender.bind(this);\n        this.timeCursor = null;\n    }\n\n    handleOnRender() {\n        let { value } = this.props;\n\n        this.setState({\n            load: false,\n            currentValue: value,\n        });\n    }\n\n    componentWillUpdate(nextProps) {\n        if (nextProps.value != this.props.value) {\n            this.setState({ load: true });\n        }\n    }\n\n    componentDidMount() {\n        this.setCursor();\n    }\n\n    componentDidUpdate() {\n        this.setCursor();\n    }\n\n    setCursor() {\n        if (this.timeCursor) {\n            clearInterval(this.timeCursor);\n        }\n\n        let mathList = document.getElementsByClassName(\"math\");\n\n        for (let el of mathList) {\n            let mjxEls = el.getElementsByClassName(\"mjx-char\");\n\n            for (let mjx of mjxEls) {\n                if (mjx.innerHTML == \"âˆ£\") {\n                    mjx.style.fontSize = \"1em\";\n                    this.timeCursor = setInterval(() => {\n                        if (mjx.style.visibility == \"hidden\") {\n                            mjx.style.visibility = \"visible\";\n                        } else {\n                            mjx.style.visibility = \"hidden\";\n                        }\n                    }, 500);\n                }\n\n                mjx.parentElement.style.marginLeft = \"0\";\n            }\n        }\n    }\n\n    getStyle(load) {\n        return { display: load ? \"none\" : \"block\" };\n    }\n\n    render() {\n        let { value } = this.props;\n        let { currentValue, load } = this.state;\n\n        return (\n            <React.Fragment>\n                <div style={this.getStyle(load)} className=\"math\">\n                    <MathJax.Node formula={value} onRender={this.handleOnRender} />\n                </div>\n\n                <div style={this.getStyle(!load)} className=\"math\">\n                    <MathJax.Node formula={currentValue} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PropTypes from \"prop-types\";\nimport Math from \"./Math\";\nimport { Backspace } from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = () => ({\n    root: {\n        height: \"150px\",\n        padding: \"1em 2em\",\n    },\n    icon: {\n        float: \"right\",\n        cursor: \"pointer\",\n    },\n    screen: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        position: \"relative\",\n    },\n    status: {\n        top: \"-12px\",\n        left: \"20px\",\n        padding: \"0 10px\",\n        margin: 0,\n        position: \"absolute\",\n        background: \"white\",\n    },\n    actionBtn: {\n        cursor: \"pointer\",\n    },\n});\n\nclass Screen extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        screenValue: PropTypes.object,\n        onKeyUp: PropTypes.func,\n        onRemove: PropTypes.func,\n        onClear: PropTypes.func,\n        correct: PropTypes.bool,\n    };\n\n    renderValue() {\n        let { screenValue } = this.props;\n\n        if (screenValue) {\n            return (<Math value={screenValue.last().getTeX()} />);\n        }\n\n        return (<span>Degite um valor</span>);\n    }\n\n    getCorrectText() {\n        let { correct, classes } = this.props;\n\n        if (typeof correct === \"undefined\") {\n            return \"\";\n        }\n\n        if (correct) {\n            return (\n                <h4\n                    className={classes.status}\n                    style={{ color: \"#228416\" }}\n                >\n                    Correto\n                </h4>\n            );\n        }\n\n        return (\n            <h4\n                className={classes.status}\n                style={{ color: \"#ec211d\" }}\n            >\n                Incorreto\n            </h4>\n        );\n    }\n\n    getCorrectBorder() {\n        let { correct } = this.props;\n\n        if (typeof correct === \"undefined\") {\n            return {};\n        }\n\n        if (correct) {\n            return {\n                border: \"2px solid\",\n                borderColor: \"#228416\"\n            }\n        }\n\n        return {\n            border: \"2px solid\",\n            borderColor: \"#ec211d\"\n        }\n    }\n\n    render() {\n        let {\n            classes,\n            onKeyUp,\n            onClear,\n            onRemove,\n        } = this.props;\n\n        return (\n            <Grid container onKeyUp={onKeyUp} className={classes.root} spacing={0}>\n                <Grid item xs={6}>\n                    <span\n                        id=\"clear\"\n                        onClick={onClear}\n                        className={classes.actionBtn}\n                    >\n                        LIMPAR\n                    </span>\n                </Grid>\n                <Grid item xs={6}>\n                    <Backspace\n                        className={classes.icon}\n                        fontSize=\"small\"\n                        onClick={onRemove}\n                    />\n                </Grid>\n                <Grid\n                    item\n                    xs={12}\n                    className={classes.screen}\n                    style={this.getCorrectBorder()}\n                >\n                    {this.getCorrectText()}\n                    {this.renderValue()}\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(styles)(Screen);\n","export let appConfig = {};\n\nexport function init(config) {\n    appConfig = config;\n    Object.freeze(appConfig);\n}\n","export default class ValueContext {\n\n    /**\n     *\n     * @param {Object} strategy\n     */\n    constructor (strategy) {\n        this.strategy = strategy;\n    }\n\n    /**\n     *\n     * @param {Object} value\n     *\n     * @returns {Object}\n     */\n    addValue (value) {\n        return this.strategy.addValue(value);\n    }\n\n    /**\n     *\n     * @returns {Obejct}\n     */\n    remove() {\n        return this.strategy.remove();\n    }\n\n    /**\n     *\n     * @returns {any}\n     */\n    changeValue (direction) {\n        return this.strategy.changeValue(direction);\n    }\n}\n","import { appConfig } from \"../../Keyboard/appContext\";\nimport ValueContext from \"./ValueContext\";\n\nexport default (value) => {\n    let context = appConfig[value.getContext()];\n    let strategy = new context(value);\n\n    return new ValueContext(strategy);\n};\n","import contextFactory from \"./Strategies/contextFactory\";\n\nexport const NEXT_VALUE = \"nextValue\";\nexport const PREV_VALUE = \"prevValue\";\n\nexport default class ValueList {\n    /**\n     *\n     * @param {Object} value\n     */\n    constructor(value) {\n        this.value = value;\n        this.boot();\n    }\n\n    /**\n     * Boot the instance\n     */\n    boot() {\n        if (!this.value.cursor) {\n            this.value.cursor = true;\n        }\n    }\n\n    /**\n     * set the current value to next value\n     */\n    nextValue() {\n        let value = this.getContext().changeValue(NEXT_VALUE);\n\n        if (value === null) return value;\n        this.value = value;\n\n        return true;\n    }\n\n    /**\n     * set the current value to prev value\n     */\n    prevValue() {\n        let value = this.getContext().changeValue(PREV_VALUE);\n\n        if (value === null) return value;\n        this.value = value;\n\n        return true;\n    }\n\n    /**\n     *  add value to list\n     *\n     * @param {Object} value\n     */\n    addValue(value) {\n        this.value = this.getContext().addValue(value);\n    }\n\n    /**\n     * remove the current value\n     */\n    remove() {\n        this.value = this.getContext().remove();\n    }\n\n    /**\n     * unfocus value list\n     */\n    unfocus() {\n        if (!this.value.cursor) return;\n\n        this.value.toggleCursor();\n    }\n\n    /**\n     * focus value list\n     */\n    focus() {\n        if (this.value.cursor) return;\n\n        this.value.toggleCursor();\n    }\n\n    /**\n     * Focus last value\n     */\n    focusLast() {\n        this.unfocus();\n        this.value = this.last();\n        this.focus();\n    }\n\n    /**\n     * Focus first value\n     */\n    focusFirst() {\n        this.unfocus();\n        this.value = this.first();\n        this.focus();\n    }\n\n    /**\n     *  returns the last Value from list\n     *\n     * @returns {Object}\n     */\n    last() {\n        let value = this.value;\n        let nextValue = null;\n\n        while ((nextValue = value.nextValue)) {\n            value = nextValue;\n        }\n\n        return value;\n    }\n\n    /**\n     * returns the first Value from list\n     *\n     * @returns {Object}\n     */\n    first() {\n        let value = this.value;\n        let prevValue = null;\n\n        while ((prevValue = value.prevValue)) {\n            value = prevValue;\n        }\n\n        return value;\n    }\n\n    /**\n     * @returns {Object}\n     */\n    getContext() {\n        return contextFactory(this.value);\n    }\n}\n","export const LEFT = 37;\nexport const RIGHT = 39;\n","export default class Value {\n    constructor(operator, prevValue) {\n        this.nextValue = null;\n        this.prevValue = prevValue;\n        this.operator = operator;\n        this.cursor = false;\n    }\n\n    toggleCursor() {\n        this.cursor = !this.cursor;\n    }\n\n    setNextValue(nextValue) {\n        if (this.nextValue) {\n            nextValue.nextValue = this.nextValue;\n            nextValue.nextValue.setPrevValue(nextValue);\n        }\n\n        this.nextValue = nextValue;\n    }\n\n    getContext() {\n        return \"value\";\n    }\n\n    setPrevValue(prevValue) {\n        this.prevValue = prevValue;\n    }\n\n    value() {\n        return this.operator;\n    }\n\n    valueTeX() {\n        if (this.cursor) {\n            return this.value() + \"\\\\mid\";\n        }\n\n        return this.value();\n    }\n\n    getValue() {\n        if (!this.prevValue) {\n            return this.value();\n        }\n\n        return this.prevValue.getValue() + this.value();\n    }\n\n    getTeX() {\n        if (!this.prevValue) {\n            return this.valueTeX();\n        }\n\n        return this.prevValue.getTeX() + this.valueTeX();\n    }\n}\n","import Value from \"./Value\";\nimport ValueList from \"./ValueList\";\n\nexport const DIVIDER = \"DIVIDER\";\nexport const DIVIDEND = \"DIVIDEND\";\n\nexport default class Fraction extends Value {\n    /**\n     *\n     * @param {Object} prevValue\n     */\n    constructor(prevValue) {\n        super(\"/\", prevValue);\n        this.divider = null;\n\n        let value = new Value(\"\");\n        value.toggleCursor();\n\n        this.dividend = new ValueList(value);\n        this.currentCursor = DIVIDEND;\n    }\n\n    toggleCursor() {\n        super.toggleCursor();\n\n        if (this.cursor) {\n            this.setCursor(DIVIDEND);\n        } else {\n            this.unfocus();\n        }\n    }\n\n    /**\n     *  Add value in divider\n     *\n     * @param {Object} divider\n     */\n    addDivider(divider) {\n        if (this.currentCursor === DIVIDEND) {\n            this.unfocus();\n            this.currentCursor = DIVIDER;\n        }\n\n        if (!this.divider) {\n            return this.divider = new ValueList(divider);\n        }\n\n        this.divider.addValue(divider);\n    }\n\n    /**\n     *  Add value in dividend\n     *\n     * @param {Object} dividend\n     */\n    addDividend(dividend) {\n        if (this.currentCursor === DIVIDER) {\n            this.unfocus();\n            this.currentCursor = DIVIDEND;\n        }\n\n        this.dividend.addValue(dividend);\n    }\n\n    /**\n     *  Get context key\n     *\n     * @returns {String}\n     */\n    getContext() {\n        return \"fraction\";\n    }\n\n    /**\n     * unfocus fraction\n     *\n     */\n    unfocus() {\n        if (this.dividend) {\n            this.dividend.unfocus();\n        }\n\n        if (this.divider) {\n            this.divider.unfocus();\n        }\n\n        this.currentCursor = null;\n    }\n\n    /**\n     * Set cursor in operator\n     *\n     * @param {String} operator\n     */\n    setCursor(operator) {\n        if (operator === DIVIDER) {\n            if (this.divider) {\n                this.divider.focusFirst();\n            } else {\n                this.divider = new ValueList(new Value(\"\"));\n            }\n\n            this.currentCursor = DIVIDER;\n        } else {\n            if (this.dividend) {\n                this.dividend.focusLast();\n            } else {\n                this.dividend = new ValueList(new Value(\"\"));\n            }\n\n            this.currentCursor = DIVIDEND;\n        }\n    }\n\n    /**\n     * get the current value\n     *\n     * @returns {Object}\n     */\n    getCurrentValue() {\n        if (this.currentCursor == DIVIDER) {\n            return this.divider.value;\n        }\n\n        return this.dividend.value;\n    }\n\n    /**\n     *  Change value direction\n     *\n     * @param {String} direction\n     * @returns {Object}\n     */\n    changeValue(direction) {\n        if (this.currentCursor == DIVIDER) {\n            return this.divider[direction]();\n        }\n\n        return this.dividend[direction]();\n    }\n\n    /**\n     *\n     *\n     */\n    remove() {\n        if (this.currentCursor == DIVIDER) {\n            return this.divider.remove();\n        }\n\n        return this.dividend.remove();\n    }\n\n    /**\n     * set prentheses\n     *\n     * @param {String} value\n     *\n     * @returns {String}\n     */\n    setParentheses(value) {\n        return `[${value}]`;\n    }\n\n    /**\n     * get value\n     *\n     * @returns {String}\n     */\n    value() {\n        let dividend = this.setParentheses(this.getDividendValue());\n        let divider = this.setParentheses(this.getDividerValue());\n\n        return `${dividend}/${divider}`;\n    }\n\n    /**\n     * get TEX value\n     *\n     * @returns {String}\n     */\n    valueTeX() {\n        return `\\\\frac{${this.getDividendTeX()}}{${this.getDividerTeX()}}`;\n    }\n\n    /**\n     * get divider TEX\n     *\n     * @returns {String}\n     */\n    getDividerTeX() {\n        return this.divider ?\n            this.divider.last().getTeX() : \"\";\n    }\n\n    /**\n     * get dividend TEX\n     *\n     * @returns {String}\n     */\n    getDividendTeX() {\n        return this.dividend ?\n            this.dividend.last().getTeX() : \"\";\n    }\n\n    /**\n     * get divider Value\n     *\n     * @returns {String}\n     */\n    getDividerValue() {\n        return this.divider ?\n            this.divider.last().getValue() : \"\";\n    }\n\n    /**\n     * get dividend Value\n     *\n     * @returns {String}\n     */\n    getDividendValue() {\n        return this.dividend ?\n            this.dividend.last().getValue() : \"\";\n    }\n}\n","import Value from \"./Value\";\nimport ValueList from \"./ValueList\";\n\nexport default class Exponent extends Value {\n    /**\n     *\n     * @param {Object} prevValue\n     */\n    constructor(prevValue) {\n        super(\"^\", prevValue);\n\n        let value = new Value(\"\");\n        value.toggleCursor();\n\n        this.valueList = new ValueList(value);\n    }\n\n    toggleCursor() {\n        super.toggleCursor();\n\n        if (this.cursor) {\n            this.valueList.focusLast();\n        } else {\n            this.unfocus();\n        }\n    }\n\n    /**\n     *\n     * @param {Object} value\n     */\n    addValue(value) {\n        this.valueList.addValue(value);\n    }\n\n    /**\n     *\n     */\n    remove() {\n        this.valueList.remove();\n    }\n\n    /**\n     * unfocus potentiation\n     *\n     */\n    unfocus() {\n        this.valueList.unfocus();\n    }\n\n    /**\n     * Get value\n     *\n     * @returns {String}\n     */\n    value() {\n        return `^[${this.valueList.last().getValue()}]`;\n    }\n\n    /**\n     * Get TEX value\n     *\n     * @returns {String}\n     */\n    valueTeX() {\n        return `^{${this.valueList.last().getTeX()}}`;\n    }\n\n    /**\n     *  Get context key\n     *\n     * @returns {String}\n     */\n    getContext() {\n        return \"exponent\";\n    }\n}\n","import Value from \"./Value\";\nimport ValueList from \"./ValueList\";\n\nexport const RADICAND = \"RADICAND\";\nexport const INDEX = \"INDEX\";\n\nexport default class Root extends Value {\n\n    /**\n     *\n     * @param {Object} prevValue\n     */\n    constructor(prevValue) {\n        super(\"sqrt\", prevValue);\n        this.index = null;\n\n        let value = new Value(\"\");\n        value.toggleCursor();\n\n        this.radicand = new ValueList(value);\n        this.currentCursor = RADICAND;\n    }\n\n    addRadicand(value) {\n        if (!this.isRadicand()) {\n            this.unfocus();\n            this.focus(RADICAND);\n        }\n\n        if (!this.radicand) {\n            this.radicand = new ValueList(value);\n            return;\n        }\n\n        this.radicand.addValue(value);\n    }\n\n    addIndex(value) {\n        if (!this.isIndex()) {\n            this.unfocus();\n            this.focus(INDEX);\n        }\n\n        if (!this.index) {\n            this.index = new ValueList(value);\n            return;\n        }\n\n        this.index.addValue(value);\n    }\n\n    focus(operator) {\n        this.cursor = true;\n\n        if (operator === RADICAND) {\n            this.currentCursor = RADICAND;\n            if (!this.radicand) return;\n            this.radicand.focusLast();\n            return;\n        }\n\n        this.currentCursor = INDEX;\n        if (!this.index) return;\n        this.index.focusLast();\n    }\n\n    toggleCursor() {\n        super.toggleCursor();\n\n        if (this.cursor) {\n            this.focus(RADICAND);\n        } else {\n            this.unfocus();\n        }\n    }\n\n    remove() {\n        if (this.isIndex()) {\n            return this.index.remove();\n        }\n\n        this.radicand.remove();\n    }\n\n    /**\n     * Get value\n     *\n     * @returns {String}\n     */\n    value() {\n        if (this.index)\n            return `sqrt(${this.radicand.last().getValue()}, ${this.index.last().getValue()})`;\n\n        return `sqrt(${this.radicand.last().getValue()})`;\n    }\n\n    /**\n     * Get TEX value\n     *\n     * @returns {String}\n     */\n    valueTeX() {\n        if (this.index)\n            return `\\\\sqrt[${this.index.last().getTeX()}]{${this.radicand.last().getTeX()}}`;\n\n        return `\\\\sqrt{${this.radicand.last().getTeX()}}`;\n    }\n\n    /**\n     * unfocus\n     *\n     */\n    unfocus() {\n        if (this.radicand) this.radicand.unfocus();\n        if (this.index) this.index.unfocus();\n\n        this.currentCursor = null;\n        this.cursor = false;\n    }\n\n    /**\n     * get the current value\n     *\n     * @returns {Object}\n     */\n    getCurrentValue() {\n        let valueList = this.index;\n\n        if (this.isRadicand()) {\n            valueList = this.radicand;\n        }\n\n        if (!valueList) return null;\n\n        return valueList.value;\n    }\n\n    /**\n     *  Change value direction\n     *\n     * @param {String} direction\n     * @returns {Object}\n     */\n    changeValue(direction) {\n        if (this.isRadicand()) {\n            return this.radicand[direction]();\n        }\n\n        return this.index[direction]();\n    }\n\n    toNextValue() {\n        if (this.isRadicand()) {\n            this.radicand.nextValue();\n        } else {\n            this.index.nextValue();\n        }\n    }\n\n    toPrevValue() {\n        if (this.isRadicand()) {\n            this.radicand.prevValue();\n        } else {\n            this.index.prevValue();\n        }\n    }\n\n    isRadicand() {\n        return this.currentCursor === RADICAND;\n    }\n\n    isIndex() {\n        return this.currentCursor === INDEX;\n    }\n\n    /**\n     *  Get context key\n     *\n     * @returns {String}\n     */\n    getContext() {\n        return \"root\";\n    }\n}\n","import ValueList from \"./ValueList\";\nimport Fraction from \"./Fraction\";\nimport Exponent from \"./Exponent\";\nimport Root from \"./Root\";\nimport Value from \"./Value\";\n\nconst isSqrt = (string, i) => string.charAt(i + 1) === \"q\" &&\n    string.charAt(i + 2) === \"r\" &&\n    string.charAt(i + 3) === \"t\";\n\n\nexport const parser = (string, mapEvents) => {\n    let valueList = new ValueList(new Value(\"\"));\n\n    for (let i = 0; i < string.length; i++) {\n        let char = string.charAt(i);\n\n        switch (char) {\n        case \" \":\n            break;\n        case \"/\":\n            i++;\n            break;\n        case \")\":\n        case \",\":\n        case \"]\":\n            valueList.nextValue();\n            break;\n        case \"[\":\n            valueList.addValue(new Fraction());\n            break;\n        case \"^\":\n            valueList.addValue(new Exponent());\n            i++;\n            break;\n        case \"s\":\n            if (isSqrt(string, i)) {\n                valueList.addValue(new Root());\n                i += 4;\n                break;\n            }\n\n            valueList.addValue(mapEvents.get(char)());\n            break;\n        case \".\":\n            char = \",\";\n            valueList.addValue(mapEvents.get(char)());\n            break;\n        default:\n            valueList.addValue(mapEvents.get(char)());\n            break;\n        }\n    }\n\n    return valueList;\n};\n","import React, { Component as ReactComponet } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport green from \"@material-ui/core/colors/green\";\nimport red from \"@material-ui/core/colors/red\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport MathJax from \"react-mathjax\";\nimport Screen from \"../Screen\";\nimport ValueList from \"../Value/ValueList\";\nimport { init } from \"./appContext\";\n\nimport { LEFT, RIGHT } from \"../keyConsts\";\nimport Value from \"../Value/Value\";\nimport { parser } from \"../Value/parser\";\n\nconst styles = () => ({\n    root: {\n        position: \"relative\",\n        zIndex: \"1\",\n    },\n    item: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: \"1px\",\n    },\n    responseBtn: {\n        position: \"absolute\",\n        backgroundColor: red[600],\n        left: \"10px\",\n        marginTop: \"-20px\",\n        zIndex: \"2\",\n\n        \"&:hover\": {\n            backgroundColor: red[900],\n        },\n    },\n    container: {\n        backgroundColor: green[\"A200\"],\n        zIndex: \"1\",\n    },\n});\n\nconst mathJaxConfig = {\n    tex2jax: {\n        inlineMath: []\n    },\n    showMathMenu: false,\n    showMathMenuMSIE: false,\n    \"fast-preview\": {\n        disabled: true\n    },\n    showProcessingMessages: false,\n    styles: {\n        \"#MathJax_Message\": {display: \"none\"},\n        \"#MathJax_MSIE_Frame\": {display: \"none\"}\n    }\n};\n\nclass Component extends ReactComponet {\n    static propTypes = {\n        keyboard: PropTypes.array.isRequired,\n        mapKeys: PropTypes.object.isRequired,\n        mapEvents: PropTypes.object.isRequired,\n        contextConfig: PropTypes.object.isRequired,\n        classes: PropTypes.object.isRequired,\n        responses: PropTypes.array,\n        current: PropTypes.object,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            valueList: null,\n            showKeyboard: false,\n            correct: undefined,\n        };\n\n        this.clickBuntton = this.clickBuntton.bind(this);\n        this.handleKeyUp = this.handleKeyUp.bind(this);\n        this.handleKeyClear = this.handleKeyClear.bind(this);\n        this.handleKeyRemove = this.handleKeyRemove.bind(this);\n        this.handleToggleResponses = this.handleToggleResponses.bind(this);\n\n        this.props.mapKeys.setCallback(this.clickBuntton);\n        this.props.mapKeys.setMap();\n        this.props.mapEvents.setMap();\n        init(this.props.contextConfig);\n    }\n\n    componentWillMount() {\n        let { current, mapEvents } = this.props;\n\n        if (current) {\n            let valueList = parser(current.value, mapEvents);\n            valueList.unfocus();\n\n            this.setState({\n                valueList,\n                correct: current.correct\n            });\n        }\n    }\n\n    clickBuntton(btn) {\n        let { mapEvents } = this.props;\n        let { valueList } = this.state;\n        let nextValue = mapEvents.get(btn)();\n\n        if (!valueList) {\n            valueList = new ValueList(nextValue);\n        } else {\n            valueList.addValue(nextValue);\n        }\n\n        this.setState({\n            valueList,\n            correct: undefined,\n        });\n    }\n\n    handleKeyUp({ keyCode }) {\n        let { valueList } = this.state;\n\n        if (keyCode == LEFT) {\n            valueList.prevValue();\n        } else if (keyCode == RIGHT) {\n            valueList.nextValue();\n        } else {\n            return;\n        }\n\n        this.setState({\n            valueList,\n            correct: undefined,\n        });\n    }\n\n    handleKeyClear() {\n        let { valueList } = this.state;\n\n        if (valueList) {\n            valueList = new ValueList(new Value(\"\"));\n            this.setState({\n                valueList,\n                correct: undefined,\n            });\n        }\n    }\n\n    handleKeyRemove() {\n        let { valueList } = this.state;\n\n        if (valueList) {\n            valueList.remove();\n            this.setState({\n                valueList,\n                correct: undefined,\n            });\n        }\n    }\n\n    handleToggleResponses() {\n        let { showKeyboard } = this.state;\n\n        showKeyboard = !showKeyboard;\n\n        this.setState({ showKeyboard });\n    }\n\n    hasResponses() {\n        let { responses } = this.props;\n\n        return responses && responses.length > 0;\n    }\n\n    render() {\n        let {\n            keyboard,\n            mapKeys,\n            classes,\n            responses,\n        } = this.props;\n\n        let {\n            valueList,\n            showKeyboard,\n            correct,\n        } = this.state;\n\n        let btnResponses = \"\";\n        let responsesComp = \"\";\n\n        if (this.hasResponses()) {\n            btnResponses = (\n                <Fab\n                    onClick={this.handleToggleResponses}\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.responseBtn}\n                >\n                    {showKeyboard ? <CloseIcon /> : responses.length}\n                </Fab>\n            );\n\n            let response = Object.assign({}, responses[0]);\n            delete response.id\n            delete response.tex\n            let header = Object.keys(response);\n\n            responsesComp = (\n                <Collapse\n                    in={showKeyboard}\n                    timeout=\"auto\"\n                    unmountOnExit\n                >\n                    <Table className={classes.table} size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">Resposta</TableCell>\n                                {header.map((value) => {\n                                    return (\n                                        <TableCell align=\"center\">{value}</TableCell>\n                                    )\n                                })}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {responses.map((response) => (\n                                <TableRow key={response.id}>\n                                    <TableCell align=\"center\">\n                                        <MathJax.Node formula={response.tex}/>\n                                    </TableCell>\n                                    {header.map((value) => {\n                                        return (\n                                            <TableCell align=\"center\">{response[value]}</TableCell>\n                                        )\n                                    })}\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Collapse>\n            );\n        }\n\n        return (\n            <Paper onKeyUp={this.handleKeyUp} className={classes.root}>\n                <MathJax.Provider options={mathJaxConfig}>\n                    <Screen\n                        screenValue={valueList}\n                        onKeyUp={this.handleKeyUp}\n                        onClear={this.handleKeyClear}\n                        onRemove={this.handleKeyRemove}\n                        correct={correct}\n                    />\n                    {btnResponses}\n                    {responsesComp}\n                    <Grid\n                        container\n                        className={classes.container}\n                        spacing={0}\n                    >\n                        {keyboard.map(row => row.map(btn => (\n                            <Grid key={btn} item xs={Math.ceil(12/row.length)}>\n                                {mapKeys.get(btn)}\n                            </Grid>\n                        )))}\n                    </Grid>\n                </MathJax.Provider>\n            </Paper>\n        );\n    }\n}\n\nexport default withStyles(styles)(Component);\n","import React, { Component as ReactComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport MathJax from \"react-mathjax\";\n\nexport default class Component extends ReactComponent {\n    static propTypes = {\n        text: PropTypes.string.isRequired,\n        onClick: PropTypes.func.isRequired,\n        value: PropTypes.string.isRequired,\n        classes: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        const { onClick, value } = this.props;\n        onClick(value);\n    }\n\n    render() {\n        const { text, classes } = this.props;\n\n        return (\n            <Button className={classes.button} onClick={this.handleClick}>\n                <MathJax.Node formula={text} />\n            </Button>\n        );\n    }\n}\n","import { withStyles } from \"@material-ui/core/styles\";\nimport Component from \"./Component\";\n\nconst styles = () => ({\n    button: {\n        margin: 0,\n        width: \"100%\",\n        height: \"68px\",\n    },\n    input: {\n        display: \"none\",\n    },\n});\n\nexport default withStyles(styles)(Component);\n","import React from \"react\";\nimport Key from \"../Key\";\n\nexport class MapKeys {\n    constructor() {\n        this.map = new Map();\n    }\n\n    setCallback(callback) {\n        this.callback = callback;\n    }\n\n    get(key) {\n        return this.map.get(key);\n    }\n\n    set(key, val) {\n        return this.map.set(key, val);\n    }\n\n    getComponent(text, value) {\n        return (\n            <Key key={text + value} text={text} value={value} onClick={this.callback} />\n        );\n    }\n\n    setMap() {\n        this.setNumbersButtons();\n        this.set(\"=\", this.getComponent(\"=\", \"=\"));\n        this.set(\",\", this.getComponent(\",\", \",\"));\n        this.set(\"+\", this.getComponent(\"+\", \"+\"));\n        this.set(\"-\", this.getComponent(\"-\", \"-\"));\n        this.set(\"*\", this.getComponent(\"*\", \"*\"));\n        this.set(\"/\", this.getComponent(\"\\\\frac{x}{y}\", \"/\"));\n        this.set(\"(\", this.getComponent(\"(\", \"(\"));\n        this.set(\")\", this.getComponent(\")\", \")\"));\n        this.set(\"^\", this.getComponent(\"x^y\", \"^\"));\n        this.set(\"sqrt\", this.getComponent(\"\\\\sqrt[y]{x}\", \"sqrt\"));\n    }\n\n    setNumbersButtons() {\n        for (let index = 0; index <= 9; index++) {\n            this.set(\n                index.toString(),\n                this.getComponent(index.toString(), index.toString())\n            );\n        }\n    }\n}\n\nexport default new MapKeys();\n","import Value from \"./Value\";\n\nexport default class Dot extends Value {\n    constructor(prevValue) {\n        super(\".\", prevValue);\n    }\n\n    valueTeX() {\n        if (this.cursor) {\n            return \",\\\\mid\";\n        }\n\n        return \",\";\n    }\n}\n","import Value from \"./Value\";\n\nexport default class Operator extends Value {\n    value() {\n        return \" \" + this.operator;\n    }\n\n    getValue() {\n        if (!this.prevValue) {\n            return this.value() + \" \";\n        }\n\n        return this.prevValue.getValue() + this.value() + \" \";\n    }\n\n    getTeX() {\n        if (!this.prevValue) {\n            return this.valueTeX() + \" \";\n        }\n\n        return this.prevValue.getTeX() + this.valueTeX() + \" \";\n    }\n}\n","import Value from \"../Value/Value\";\nimport Fraction from \"../Value/Fraction\";\nimport Dot from \"../Value/Dot\";\nimport Operator from \"../Value/Operator\";\nimport Exponent from \"../Value/Exponent\";\nimport Root from \"../Value/Root\";\n\nclass MapEvents {\n    constructor() {\n        this.map = new Map();\n    }\n\n    set(key, callback) {\n        this.map.set(key, callback);\n    }\n\n    get(key) {\n        return this.map.get(key);\n    }\n\n    setMap() {\n        this.setNumbersButtons();\n        this.set(\"=\", (value) => (new Operator(\"=\", value)));\n        this.set(\",\", (value) => (new Dot(value)));\n        this.set(\"+\", (value) => (new Operator(\"+\", value)));\n        this.set(\"-\", (value) => (new Operator(\"-\", value)));\n        this.set(\"*\", (value) => (new Operator(\"*\", value)));\n        this.set(\"/\", (value) => (new Fraction(value)));\n        this.set(\"(\", (value) => (new Value(\"(\", value)));\n        this.set(\")\", (value) => (new Value(\")\", value)));\n        this.set(\"^\", (value) => (new Exponent(value)));\n        this.set(\"sqrt\", (value) => (new Root(value)));\n    }\n\n    setNumbersButtons() {\n        for (let index = 0; index <= 9; index++) {\n            this.set(\n                index.toString(),\n                (value) => (new Value(index.toString(), value))\n            );\n        }\n    }\n}\n\nexport default new MapEvents();\n","export const defaultKeyboard = [\n    [\"1\", \"2\", \"3\", \"+\"],\n    [\"4\", \"5\", \"6\", \"-\"],\n    [\"7\", \"8\", \"9\", \"*\"],\n    [\",\", \"0\", \"=\", \"/\"],\n    [\"(\", \")\", \"^\", \"sqrt\"],\n];\n","export default class BaseCommand {\n    /**\n     *\n     * @param {Object} currentValue\n     */\n    constructor(currentValue) {\n        this.currentValue = currentValue;\n    }\n\n    /**\n     * @return {Object}\n     */\n    execute() {\n        throw \"Method not implemented\";\n    }\n\n    /**\n     * @return {boolean}\n     */\n    isEmptyValue() {\n        return this.currentValue.operator === \"\";\n    }\n\n    /**\n     * @return {boolean}\n     */\n    nextIsNull() {\n        return this.currentValue.nextValue === null ||\n            this.currentValue.nextValue === undefined;\n    }\n\n    /**\n     * @return {boolean}\n     */\n    prevIsNull() {\n        return this.currentValue.prevValue === null ||\n            this.currentValue.prevValue === undefined;\n    }\n}\n","import BaseCommand from \"../BaseCommand\";\n\nexport default class AddValue extends BaseCommand {\n\n    /**\n     *\n     * @param {Object} currentValue\n     * @param {Object} newValue\n     */\n    constructor(currentValue, newValue) {\n        super(currentValue);\n        this.newValue = newValue;\n    }\n\n    /**\n     * @return {Object}\n     */\n    execute() {\n        if (this.isEmptyValue()) {\n            this.replaceValue();\n        } else {\n            this.addValue();\n        }\n\n        this.newValue.cursor = true;\n\n        return this.newValue;\n    }\n\n    /**\n     *\n     */\n    replaceValue() {\n        let nextValue = this.currentValue.nextValue;\n        let prevValue = this.currentValue.prevValue;\n\n        if (nextValue) {\n            nextValue.prevValue = this.newValue;\n            this.newValue.nextValue = nextValue;\n        }\n\n        if (prevValue) {\n            prevValue.nextValue = this.newValue;\n            this.newValue.prevValue = prevValue;\n        }\n    }\n\n    /**\n     *\n     */\n    addValue() {\n        this.newValue.setPrevValue(this.currentValue);\n        this.currentValue.setNextValue(this.newValue);\n        this.currentValue.cursor = false;\n    }\n}\n","import Value from \"../../../Value\";\nimport BaseCommand from \"../BaseCommand\";\nimport { NEXT_VALUE, PREV_VALUE } from \"../../../ValueList\";\nimport { DIVIDEND, DIVIDER } from \"../../../Fraction\";\n\nexport default class ChangeValue extends BaseCommand {\n    /**\n     *\n     * @param {Object} currentValue\n     * @param {string} direction\n     */\n    constructor(currentValue, direction) {\n        super(currentValue);\n        this.direction = direction;\n    }\n\n    /**\n     * @returns {Object}\n     */\n    execute() {\n        if (this.direction === NEXT_VALUE) {\n            return this.nextValue();\n        }\n\n        return this.prevValue();\n    }\n\n    /**\n     * @returns {Object}\n     */\n    nextValue() {\n        if (this.nextIsNull()) return null;\n\n        let nextValue = this.currentValue.nextValue;\n\n        if (this.isEmptyValue()) {\n            if (this.currentValue.prevValue) {\n                nextValue.setPrevValue(this.currentValue.prevValue);\n                nextValue.prevValue.nextValue = nextValue;\n            } else {\n                nextValue.prevValue = undefined;\n            }\n        } else {\n            nextValue.prevValue.cursor = false;\n        }\n\n        nextValue.toggleCursor();\n\n        return this.setFraction(nextValue);\n    }\n\n    /**\n     * @returns {Object}\n     */\n    prevValue() {\n        if (this.isEmptyValue() && this.prevIsNull()) return null;\n\n        let prevValue = this.currentValue.prevValue;\n\n        if (this.prevIsNull()) {\n            prevValue = new Value(\"\");\n            prevValue.setNextValue(this.currentValue);\n        }\n\n        if (this.isEmptyValue()) {\n            if (this.currentValue.nextValue) {\n                this.currentValue.nextValue.setPrevValue(prevValue);\n                prevValue.nextValue = this.currentValue.nextValue;\n            } else {\n                prevValue.nextValue = undefined;\n            }\n        } else {\n            prevValue.nextValue.prevValue = prevValue;\n            prevValue.nextValue.cursor = false;\n        }\n\n        prevValue.toggleCursor();\n\n        return this.setFraction(prevValue);\n    }\n\n    setFraction(value) {\n        let className = value.constructor.name;\n\n        if (className !== \"Fraction\") return value;\n        value.unfocus();\n\n        if (this.direction === PREV_VALUE && this.isEmptyValue()) {\n            value.setCursor(DIVIDER);\n            value.divider.focusLast();\n\n            return value;\n        }\n\n        if (this.direction === PREV_VALUE) {\n            let newValue = new Value(\"\");\n            value.cursor = false;\n            value.setNextValue(newValue);\n            newValue.setPrevValue(value);\n            newValue.cursor = true;\n\n            return newValue;\n        }\n\n        value.setCursor(DIVIDEND);\n        value.dividend.focusFirst();\n\n        return value;\n    }\n}\n","import AddValue from \"./Commands/Value/AddValue\";\nimport ChangeValue from \"./Commands/Value/ChangeValue\";\nimport Value from \"../Value\";\n\nexport default class ValueStrategy {\n    /**\n     *\n     * @param {Object} currentValue\n     */\n    constructor(currentValue) {\n        this.currentValue = currentValue;\n    }\n\n    /**\n     *\n     * @param {Object} value\n     *\n     * @returns {Object}\n     */\n    addValue(value) {\n        let addValue = new AddValue(this.currentValue, value);\n        return addValue.execute();\n    }\n\n    /**\n     *\n     * @returns {Object}\n     */\n    remove() {\n        let prevValue = this.currentValue.prevValue;\n        let nextValue = this.currentValue.nextValue;\n\n        if (!prevValue) {\n            prevValue = new Value(\"\");\n        }\n\n        if (prevValue.getContext() !== \"value\") {\n            if (this.currentValue.operator == \"\") {\n                prevValue = prevValue.prevValue;\n\n                if (!prevValue) {\n                    prevValue = new Value(\"\");\n                }\n            } else {\n                prevValue = new Value(\"\", prevValue);\n            }\n        }\n\n        if (nextValue) {\n            prevValue.nextValue = nextValue;\n            nextValue.prevValue = prevValue;\n        } else {\n            prevValue.nextValue = undefined;\n        }\n\n        prevValue.toggleCursor();\n\n        return prevValue;\n    }\n\n    /**\n     *\n     * @returns {any}\n     */\n    changeValue(direction) {\n        let changeValue = new ChangeValue(this.currentValue, direction);\n        return changeValue.execute();\n    }\n\n    /**\n     *  change to next value\n     *\n     * @returns {Object}\n     */\n    changeToNext() {\n        let newValue = new Value(\"\", this.currentValue);\n        newValue.cursor = true;\n\n        this.currentValue.setNextValue(newValue);\n\n        return newValue;\n    }\n\n    /**\n     * change to prev value\n     *\n     * @returns {Object}\n     */\n    changeToPrev() {\n        if (this.currentValue.prevValue) {\n            this.currentValue.prevValue.cursor = true;\n\n            return this.currentValue.prevValue;\n        }\n\n        let newValue = new Value(\"\");\n        newValue.setNextValue(this.currentValue);\n        newValue.cursor = true;\n\n        this.currentValue.setPrevValue(newValue);\n\n        return newValue;\n    }\n}\n","import BaseCommand from \"../BaseCommand\";\nimport { DIVIDEND, DIVIDER } from \"../../../Fraction\";\nimport { NEXT_VALUE } from \"../../../ValueList\";\n\n/**\n * Get the current value\n *\n * @returns {Object}\n */\nconst getCurrentValue = (fraction) => {\n    let valueList = fraction.divider;\n\n    if (fraction.currentCursor === DIVIDEND) {\n        valueList = fraction.dividend;\n    }\n\n    return valueList.value;\n};\n\nexport default class ChangeValue extends BaseCommand {\n    /**\n     *\n     * @param {Object} fraction\n     * @param {string} direction\n     */\n    constructor(fraction, direction) {\n        super(getCurrentValue(fraction));\n        this.fraction = fraction;\n        this.direction = direction;\n    }\n\n    /**\n     *\n     */\n    execute() {\n        if (this.direction === NEXT_VALUE) {\n            return this.nextValue();\n        }\n\n        return this.prevValue();\n    }\n\n    /**\n     * set next value\n     *\n     * @returns {Object}\n     */\n    nextValue() {\n        if (this.isDividend()) {\n            if (this.nextIsNull()) {\n                this.fraction.unfocus();\n                this.fraction.setCursor(DIVIDER);\n            } else {\n                this.fraction.dividend.nextValue();\n            }\n\n            return this.fraction;\n        }\n\n        if (this.nextIsNull()) {\n            this.fraction.unfocus();\n            return null;\n        }\n\n        this.fraction.divider.nextValue();\n\n        return this.fraction;\n    }\n\n    /**\n     * set prev value\n     *\n     * @returns {Object}\n     */\n    prevValue() {\n        if (this.isDividend()) {\n            if (this.prevIsNull() && this.isEmptyValue()) {\n                this.fraction.unfocus();\n                return null;\n            }\n\n            this.fraction.dividend.prevValue();\n            return this.fraction;\n        }\n\n        if (this.prevIsNull()) {\n            if (this.isEmptyValue()) {\n                if (this.nextIsNull()) {\n                    this.fraction.divider = null;\n                } else {\n                    let value = this.fraction.divider.value;\n                    let next = value.nextValue;\n                    next.prevValue = null;\n                    this.fraction.divider.value = next;\n                    this.fraction.divider.focus();\n                    this.fraction.unfocus();\n                }\n\n                this.fraction.setCursor(DIVIDEND);\n            } else {\n                this.fraction.divider.prevValue();\n            }\n        } else {\n            this.fraction.divider.prevValue();\n        }\n\n        return this.fraction;\n    }\n\n    /**\n     * is dividend?\n     *\n     * @returns {boolean}\n     */\n    isDividend() {\n        return this.fraction.currentCursor === DIVIDEND;\n    }\n}\n","import ValueStrategy from \"./ValueStrategy\";\nimport { DIVIDER } from \"../Fraction\";\nimport ChangeValue from \"./Commands/Fraction/ChangeValue\";\nimport { NEXT_VALUE } from \"../ValueList\";\n\nexport default class FractionStrategy extends ValueStrategy {\n    /**\n     *\n     * @param {Object} value\n     */\n    addValue(value) {\n        if (this.currentValue.currentCursor === DIVIDER) {\n            this.currentValue.addDivider(value);\n        } else {\n            this.currentValue.addDividend(value);\n        }\n\n        return this.currentValue;\n    }\n\n    /**\n     *\n     * @returns {Object}\n     */\n    remove() {\n        this.currentValue.remove();\n        return this.currentValue;\n    }\n    /**\n     *\n     * @returns {Object}\n     */\n    changeValue(direction) {\n        let value = this.currentValue.getCurrentValue();\n\n        if (value && value.getContext() !== \"value\") {\n            this.currentValue.changeValue(direction);\n            return this.currentValue;\n        }\n\n        let command = new ChangeValue(this.currentValue, direction);\n        let result = command.execute();\n\n        if (result) return result;\n\n        this.currentValue.unfocus();\n\n        if (direction === NEXT_VALUE) {\n            return this.changeToNext();\n        }\n\n        return this.changeToPrev();\n    }\n}\n","import ValueStrategy from \"./ValueStrategy\";\nimport { NEXT_VALUE } from \"../ValueList\";\nimport Value from \"../Value\";\n\nexport default class ExponentStrategy extends ValueStrategy {\n    /**\n     *\n     * @param {Object} value\n     * @returns {Object}\n     */\n    addValue(value) {\n        this.currentValue.addValue(value);\n        return this.currentValue;\n    }\n\n    /**\n     *\n     * @returns {any}\n     */\n    changeValue(direction) {\n        if (direction == NEXT_VALUE) {\n            return this.nextValue();\n        }\n\n        return this.prevValue();\n    }\n\n    remove() {\n        this.currentValue.remove();\n    }\n\n    nextValue() {\n        let currentValue = this.currentValue.valueList.value;\n        let nextValue = currentValue.nextValue;\n\n        if (nextValue) {\n            this.currentValue.valueList.nextValue();\n            return this.currentValue;\n        }\n\n        if (currentValue.getContext() !== \"value\") {\n            this.currentValue.valueList.nextValue();\n            return this.currentValue;\n        }\n\n        nextValue = new Value(\"\", this.currentValue);\n        this.currentValue.unfocus();\n        this.currentValue.cursor = false;\n        this.currentValue.setNextValue(nextValue);\n        nextValue.cursor = true;\n\n        return nextValue;\n    }\n\n    prevValue() {\n        let currentValue = this.currentValue.valueList.value;\n        let prevValue = currentValue.prevValue;\n\n        if (prevValue) {\n            this.currentValue.valueList.prevValue();\n            return this.currentValue;\n        }\n\n        if (currentValue.getContext() !== \"value\") {\n            this.currentValue.valueList.prevValue();\n            return this.currentValue;\n        }\n\n        if (currentValue.operator === \"\") {\n            currentValue.nextValue.prevValue = undefined;\n            this.currentValue.valueList.value = currentValue.nextValue;\n            this.currentValue.unfocus();\n            this.currentValue.cursor = false;\n\n            return this.getPrev();\n        }\n\n        let newValue = new Value(\"\");\n        newValue.setNextValue(currentValue);\n        currentValue.setPrevValue(newValue);\n\n        this.currentValue.valueList.prevValue();\n        return this.currentValue;\n    }\n\n    getPrev() {\n        let prevValue = this.currentValue.prevValue;\n\n        if (!prevValue) {\n            prevValue = new Value(\"\");\n            prevValue.setNextValue(this.currentValue);\n        }\n\n        prevValue.cursor = true;\n\n        return prevValue;\n    }\n}\n","import BaseCommand from \"../BaseCommand\";\nimport { INDEX, RADICAND } from \"../../../Root\";\nimport Value from \"../../../Value\";\nimport ValueList, { NEXT_VALUE } from \"../../../ValueList\";\n\nexport default class ChangeValue extends BaseCommand {\n    /**\n     *\n     * @param {Object} root\n     * @param {string} direction\n     */\n    constructor(root, direction) {\n        super(root.getCurrentValue());\n        this.root = root;\n        this.direction = direction;\n    }\n\n    /**\n     *  Execute the command to change position value\n     *\n     * @returns {Object}\n     */\n    execute() {\n        if (this.direction === NEXT_VALUE) {\n            return this.nextValue();\n        }\n\n        return this.prevValue();\n    }\n\n    /**\n     * set next value\n     *\n     * @returns {Object}\n     */\n    nextValue() {\n        if (this.nextIsNull()) {\n            if (this.root.isRadicand()) return null;\n\n            this.root.unfocus();\n            this.root.focus(RADICAND);\n\n            if (!this.root.radicand) {\n                this.root.radicand = new ValueList(new Value(\"\"));\n                this.root.radicand.boot();\n            }\n        } else {\n            this.root.toNextValue();\n        }\n\n        return this.root;\n    }\n\n    /**\n     * set prev value\n     *\n     * @returns {Object}\n     */\n    prevValue() {\n        if (this.prevIsNull() && this.isEmptyValue()) {\n            if (this.nextIsNull()) {\n                this.changeToNullValue();\n            } else {\n                let nextValue = this.currentValue.nextValue;\n                nextValue.prevValue = null;\n                this.setCurrentValue(nextValue);\n            }\n\n            if (this.root.isIndex()) return null;\n\n            this.root.unfocus();\n            this.root.focus(INDEX);\n\n            if (!this.root.index) {\n                this.root.index = new ValueList(new Value(\"\"));\n                this.root.index.boot();\n            }\n\n            return this.root;\n        }\n\n        if (this.prevIsNull()) {\n            let value = new Value(\"\");\n            value.setNextValue(this.currentValue);\n            this.currentValue.setPrevValue(value);\n        }\n\n        this.root.toPrevValue();\n        return this.root;\n    }\n\n    setCurrentValue(value) {\n        if (this.root.isIndex()) {\n            this.root.index.value = value;\n        } else {\n            this.root.radicand.value = value;\n        }\n    }\n\n    changeToNullValue() {\n        if (this.root.isIndex()) {\n            this.root.index = null;\n        } else {\n            this.root.radicand = null;\n        }\n    }\n}\n","import ValueStrategy from \"./ValueStrategy\";\nimport ChangeValue from \"./Commands/Root/ChangeValue\";\nimport { NEXT_VALUE } from \"../ValueList\";\n\nexport default class RootStrategy extends ValueStrategy {\n    /**\n     *\n     * @param {Object} value\n     * @returns {Object}\n     */\n    addValue(value) {\n        if (this.currentValue.isRadicand()) {\n            this.currentValue.addRadicand(value);\n        } else {\n            this.currentValue.addIndex(value);\n        }\n\n        return this.currentValue;\n    }\n\n    /**\n     *\n     * @returns {Object}\n     */\n    remove() {\n        this.currentValue.remove();\n        return this.currentValue;\n    }\n\n    /**\n     *\n     * @returns {Object}\n     */\n    changeValue(direction) {\n        let value = this.currentValue.getCurrentValue();\n\n        if (value && value.getContext() !== \"value\") {\n            this.currentValue.changeValue(direction);\n            return this.currentValue;\n        }\n\n        let command = new ChangeValue(this.currentValue, direction);\n        let result = command.execute();\n\n        if (result) return result;\n\n        this.currentValue.unfocus();\n\n        if (direction === NEXT_VALUE) {\n            return this.changeToNext();\n        }\n\n        return this.changeToPrev();\n    }\n}\n","import FractionStrategy from \"../Value/Strategies/FractionStrategy\";\nimport ValueStrategy from \"../Value/Strategies/ValueStrategy\";\nimport ExponentStrategy from \"../Value/Strategies/ExponentStrategy\";\nimport RootStrategy from \"../Value/Strategies/RootStrategy\";\n\nexport default {\n    \"fraction\": FractionStrategy,\n    \"value\": ValueStrategy,\n    \"exponent\": ExponentStrategy,\n    \"root\": RootStrategy,\n};\n","import React, { Component as ReactComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport defaultMapKeys from \"./MapKeys\";\nimport defaultMapEvents from \"./MapEvents\";\nimport { defaultKeyboard } from \"./keyboards\";\nimport contextConfig from \"./contextConfig\";\n\nexport default () => {\n    let mapKeys = defaultMapKeys;\n    let keyboard = defaultKeyboard;\n    let mapEvents = defaultMapEvents;\n\n    return (WrappedComponent) => class WithKeyboard extends ReactComponent {\n        static propTypes = {\n            keyboard: PropTypes.array,\n            mapKeys: PropTypes.object,\n            mapEvents: PropTypes.object,\n            contextConfig: PropTypes.object,\n        };\n\n        render() {\n            let props = {\n                keyboard,\n                mapKeys,\n                mapEvents,\n                contextConfig,\n                ...this.props\n            };\n\n            return (\n                <WrappedComponent {...props} />\n            );\n        }\n    };\n};\n","import Component from \"./Component\";\nimport withKeyboard from \"./withKeyboard\";\n\nexport default withKeyboard()(Component);\n"],"names":["Math","props","state","handleOnRender","bind","timeCursor","value","setState","nextProps","load","setCursor","mathList","document","getElementsByClassName","el","mjxEls","mjx","innerHTML","style","fontSize","setInterval","visibility","parentElement","marginLeft","display","currentValue","getStyle","React","Component","propTypes","PropTypes","string","styles","Screen","screenValue","last","getTeX","correct","classes","status","color","onKeyUp","onClear","onRemove","root","actionBtn","icon","screen","getCorrectBorder","getCorrectText","renderValue","object","isRequired","func","bool","withStyles","appConfig","init","config","freeze","ValueContext","strategy","addValue","remove","direction","changeValue","context","getContext","NEXT_VALUE","PREV_VALUE","ValueList","boot","cursor","toggleCursor","unfocus","focus","first","nextValue","prevValue","contextFactory","LEFT","RIGHT","Value","operator","setPrevValue","getValue","valueTeX","DIVIDER","DIVIDEND","Fraction","divider","dividend","currentCursor","focusFirst","focusLast","setParentheses","getDividendValue","getDividerValue","getDividendTeX","getDividerTeX","Exponent","valueList","RADICAND","INDEX","Root","index","radicand","isRadicand","isIndex","isSqrt","i","charAt","parser","mapEvents","length","char","get","red","green","mathJaxConfig","undefined","clickBuntton","handleKeyUp","handleKeyClear","handleKeyRemove","handleToggleResponses","mapKeys","setCallback","setMap","contextConfig","current","btn","keyCode","showKeyboard","responses","keyboard","btnResponses","responsesComp","hasResponses","responseBtn","response","Object","assign","id","tex","header","keys","table","map","container","row","ceil","ReactComponet","array","handleClick","onClick","text","button","ReactComponent","MapKeys","Map","callback","key","val","set","setNumbersButtons","getComponent","toString","Dot","Operator","MapEvents","defaultKeyboard","BaseCommand","AddValue","newValue","isEmptyValue","replaceValue","setNextValue","ChangeValue","nextIsNull","setFraction","prevIsNull","className","constructor","name","ValueStrategy","execute","getCurrentValue","fraction","isDividend","next","FractionStrategy","addDivider","addDividend","command","result","changeToNext","changeToPrev","ExponentStrategy","getPrev","toNextValue","changeToNullValue","setCurrentValue","toPrevValue","RootStrategy","addRadicand","addIndex","defaultMapKeys","defaultMapEvents","WrappedComponent","withKeyboard"],"mappings":"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"}