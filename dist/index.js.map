{"version":3,"file":"index.js","sources":["../src/Screen/Math.jsx","../src/Screen/Screen.jsx","../src/Keyboard/appContext.js","../src/Value/Strategies/ValueContext.js","../src/Value/Strategies/contextFactory.js","../src/Value/ValueList.js","../src/keyConsts.js","../src/Value/Value.js","../src/Value/parser.js","../src/Keyboard/Component.jsx","../src/Key/Component.jsx","../src/Key/Key.jsx","../src/Keyboard/MapKeys.js","../src/Value/Fraction.js","../src/Value/Dot.js","../src/Value/Operator.js","../src/Value/Exponent.js","../src/Value/Root.js","../src/Keyboard/MapEvents.js","../src/Keyboard/keyboards.js","../src/Value/Strategies/Commands/BaseCommand.js","../src/Value/Strategies/Commands/Value/AddValue.js","../src/Value/Strategies/Commands/Value/ChangeValue.js","../src/Value/Strategies/ValueStrategy.js","../src/Value/Strategies/Commands/Fraction/ChangeValue.js","../src/Value/Strategies/FractionStrategy.js","../src/Value/Strategies/ExponentStrategy.js","../src/Value/Strategies/Commands/Root/ChangeValue.js","../src/Value/Strategies/RootStrategy.js","../src/Keyboard/contextConfig.js","../src/Keyboard/withKeyboard.jsx","../src/Keyboard/Keyboard.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MathJax from \"react-mathjax\";\n\nexport default class Math extends React.Component {\n    static propTypes = {\n        value: PropTypes.string,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            load: true,\n            currentValue: \"\",\n        };\n\n        this.handleOnRender = this.handleOnRender.bind(this);\n        this.timeCursor = null;\n    }\n\n    handleOnRender() {\n        let { value } = this.props;\n\n        this.setState({\n            load: false,\n            currentValue: value,\n        });\n    }\n\n    componentWillUpdate(nextProps) {\n        if (nextProps.value != this.props.value) {\n            this.setState({ load: true });\n        }\n    }\n\n    componentDidMount() {\n        this.setCursor();\n    }\n\n    componentDidUpdate() {\n        this.setCursor();\n    }\n\n    setCursor() {\n        if (this.timeCursor) {\n            clearInterval(this.timeCursor);\n        }\n\n        let mathList = document.getElementsByClassName(\"math\");\n\n        for (let el of mathList) {\n            let mjxEls = el.getElementsByClassName(\"mjx-char\");\n\n            for (let mjx of mjxEls) {\n                if (mjx.innerHTML == \"âˆ£\") {\n                    mjx.style.fontSize = \"1em\";\n                    this.timeCursor = setInterval(() => {\n                        if (mjx.style.visibility == \"hidden\") {\n                            mjx.style.visibility = \"visible\";\n                        } else {\n                            mjx.style.visibility = \"hidden\";\n                        }\n                    }, 500);\n                }\n\n                mjx.parentElement.style.marginLeft = \"0\";\n            }\n        }\n    }\n\n    getStyle(load) {\n        return { display: load ? \"none\" : \"block\" };\n    }\n\n    render() {\n        let { value } = this.props;\n        let { currentValue, load } = this.state;\n\n        return (\n            <React.Fragment>\n                <div style={this.getStyle(load)} className=\"math\">\n                    <MathJax.Node formula={value} onRender={this.handleOnRender} />\n                </div>\n\n                <div style={this.getStyle(!load)} className=\"math\">\n                    <MathJax.Node formula={currentValue} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PropTypes from \"prop-types\";\nimport Math from \"./Math\";\nimport { Backspace } from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = () => ({\n    root: {\n        height: \"150px\",\n        padding: \"1em 2em\",\n    },\n    icon: {\n        float: \"right\",\n        cursor: \"pointer\",\n    },\n    screen: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    actionBtn: {\n        cursor: \"pointer\",\n    },\n});\n\nclass Screen extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        screenValue: PropTypes.object,\n        onKeyUp: PropTypes.func,\n        onRemove: PropTypes.func,\n        onClear: PropTypes.func\n    };\n\n    renderValue() {\n        let { screenValue } = this.props;\n\n        if (screenValue) {\n            return (<Math value={screenValue.last().getTeX()} />);\n        }\n\n        return (<span>Degite um valor</span>);\n    }\n\n    render() {\n        let {\n            classes,\n            onKeyUp,\n            onClear,\n            onRemove,\n        } = this.props;\n\n        return (\n            <Grid container onKeyUp={onKeyUp} className={classes.root} spacing={0}>\n                <Grid item xs={6}>\n                    <span\n                        id=\"clear\"\n                        onClick={onClear}\n                        className={classes.actionBtn}\n                    >\n                        LIMPAR\n                    </span>\n                </Grid>\n                <Grid item xs={6}>\n                    <Backspace\n                        className={classes.icon}\n                        fontSize=\"small\"\n                        onClick={onRemove}\n                    />\n                </Grid>\n                <Grid item xs={12} className={classes.screen}>\n                    {this.renderValue()}\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(styles)(Screen);\n","export let appConfig = {};\n\nexport function init(config) {\n    appConfig = config;\n    Object.freeze(appConfig);\n}\n","export default class ValueContext {\n\n    /**\n     *\n     * @param {Object} strategy\n     */\n    constructor (strategy) {\n        this.strategy = strategy;\n    }\n\n    /**\n     *\n     * @param {Object} value\n     *\n     * @returns {Object}\n     */\n    addValue (value) {\n        return this.strategy.addValue(value);\n    }\n\n    /**\n     *\n     * @returns {Obejct}\n     */\n    remove() {\n        return this.strategy.remove();\n    }\n\n    /**\n     *\n     * @returns {any}\n     */\n    changeValue (direction) {\n        return this.strategy.changeValue(direction);\n    }\n}\n","import { appConfig } from \"../../Keyboard/appContext\";\nimport ValueContext from \"./ValueContext\";\n\nexport default (value) => {\n    let context = appConfig[value.getContext()];\n    let strategy = new context(value);\n\n    return new ValueContext(strategy);\n};\n","import contextFactory from \"./Strategies/contextFactory\";\n\nexport const NEXT_VALUE = \"nextValue\";\nexport const PREV_VALUE = \"prevValue\";\n\nexport default class ValueList {\n    /**\n     *\n     * @param {Object} value\n     */\n    constructor(value) {\n        this.value = value;\n        this.boot();\n    }\n\n    /**\n     * Boot the instance\n     */\n    boot() {\n        if (!this.value.cursor) {\n            this.value.cursor = true;\n        }\n    }\n\n    /**\n     * set the current value to next value\n     */\n    nextValue() {\n        let value = this.getContext().changeValue(NEXT_VALUE);\n\n        if (value === null) return value;\n        this.value = value;\n\n        return true;\n    }\n\n    /**\n     * set the current value to prev value\n     */\n    prevValue() {\n        let value = this.getContext().changeValue(PREV_VALUE);\n\n        if (value === null) return value;\n        this.value = value;\n\n        return true;\n    }\n\n    /**\n     *  add value to list\n     *\n     * @param {Object} value\n     */\n    addValue(value) {\n        this.value = this.getContext().addValue(value);\n    }\n\n    /**\n     * remove the current value\n     */\n    remove() {\n        this.value = this.getContext().remove();\n    }\n\n    /**\n     * unfocus value list\n     */\n    unfocus() {\n        this.value.cursor = false;\n    }\n\n    /**\n     * focus value list\n     */\n    focus() {\n        this.value.cursor = true;\n    }\n\n    /**\n     * Focus last value\n     */\n    focusLast() {\n        this.unfocus();\n        this.value = this.last();\n        this.focus();\n    }\n\n    /**\n     * Focus first value\n     */\n    focusFirst() {\n        this.unfocus();\n        this.value = this.first();\n        this.focus();\n    }\n\n    /**\n     *  returns the last Value from list\n     *\n     * @returns {Object}\n     */\n    last() {\n        let value = this.value;\n        let nextValue = null;\n\n        while ((nextValue = value.nextValue)) {\n            value = nextValue;\n        }\n\n        return value;\n    }\n\n    /**\n     * returns the first Value from list\n     *\n     * @returns {Object}\n     */\n    first() {\n        let value = this.value;\n        let prevValue = null;\n\n        while ((prevValue = value.prevValue)) {\n            value = prevValue;\n        }\n\n        return value;\n    }\n\n    /**\n     * @returns {Object}\n     */\n    getContext() {\n        return contextFactory(this.value);\n    }\n\n    /**\n     *\n     * @returns {String}\n     */\n    serialize() {\n        let value = this.first();\n        let newValue = Object.assign({}, value);\n\n        while ((value = value.nextValue)) {\n            newValue = Object.assign({}, value);\n        }\n    }\n}\n","export const LEFT = 37;\nexport const RIGHT = 39;\n","export default class Value {\n    constructor(operator, prevValue) {\n        this.nextValue = null;\n        this.prevValue = prevValue;\n        this.operator = operator;\n        this.cursor = false;\n    }\n\n    toggleCursor() {\n        this.cursor = !this.cursor;\n    }\n\n    setNextValue(nextValue) {\n        if (this.nextValue) {\n            nextValue.nextValue = this.nextValue;\n            nextValue.nextValue.setPrevValue(nextValue);\n        }\n\n        this.nextValue = nextValue;\n    }\n\n    getContext() {\n        return \"value\";\n    }\n\n    setPrevValue(prevValue) {\n        this.prevValue = prevValue;\n    }\n\n    value() {\n        return this.operator;\n    }\n\n    valueTeX() {\n        if (this.cursor) {\n            return this.value() + \"\\\\mid\";\n        }\n\n        return this.value();\n    }\n\n    getValue() {\n        if (!this.prevValue) {\n            return this.value();\n        }\n\n        return this.prevValue.getValue() + this.value();\n    }\n\n    getTeX() {\n        if (!this.prevValue) {\n            return this.valueTeX();\n        }\n\n        return this.prevValue.getTeX() + this.valueTeX();\n    }\n}\n","import ValueList from \"./ValueList\";\n\nexport const parse = (string, mapEvents) => {\n    let value = mapEvents.get(string.charAt(0))();\n    let valueList = new ValueList(value);\n\n    for (var i = 1; i < string.length; i++) {\n        switch (string.charAt(i)) {\n            case ' ':\n                break;\n\n            default:\n                value = mapEvents.get(string.charAt(i))();\n\n                valueList.addValue(value);\n        }\n    }\n\n    return valueList;\n};\n","import React, { Component as ReactComponet } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport green from \"@material-ui/core/colors/green\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MathJax from \"react-mathjax\";\nimport Screen from \"../Screen\";\nimport ValueList from \"../Value/ValueList\";\nimport { init } from \"./appContext\";\n\nimport { LEFT, RIGHT } from \"../keyConsts\";\nimport Value from \"../Value/Value\";\nimport { parse } from \"../Value/parser\";\n\nconst styles = () => ({\n    container: {\n        backgroundColor: green[\"A200\"],\n    },\n});\n\nconst mathJaxConfig = {\n    tex2jax: {\n        inlineMath: []\n    },\n    showMathMenu: false,\n    showMathMenuMSIE: false,\n    \"fast-preview\": {\n        disabled: true\n    },\n    showProcessingMessages: false,\n    styles: {\n        \"#MathJax_Message\": {display: \"none\"},\n        \"#MathJax_MSIE_Frame\": {display: \"none\"}\n    }\n};\n\nclass Component extends ReactComponet {\n    static propTypes = {\n        keyboard: PropTypes.array.isRequired,\n        mapKeys: PropTypes.object.isRequired,\n        mapEvents: PropTypes.object.isRequired,\n        contextConfig: PropTypes.object.isRequired,\n        classes: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            valueList: null,\n        };\n\n        this.clickBuntton = this.clickBuntton.bind(this);\n        this.handleKeyUp = this.handleKeyUp.bind(this);\n        this.handleKeyClear = this.handleKeyClear.bind(this);\n        this.handleKeyRemove = this.handleKeyRemove.bind(this);\n\n        this.props.mapKeys.setCallback(this.clickBuntton);\n        this.props.mapKeys.setMap();\n        this.props.mapEvents.setMap();\n        init(this.props.contextConfig);\n    }\n\n    clickBuntton(btn) {\n        let { mapEvents } = this.props;\n        let { valueList } = this.state;\n        let nextValue = mapEvents.get(btn)();\n\n        if (!valueList) {\n            valueList = new ValueList(nextValue);\n        } else {\n            valueList.addValue(nextValue);\n        }\n\n        let val = valueList.last().getValue();\n\n        console.log(val);\n        console.log(parse(val, mapEvents));\n\n        this.setState({ valueList });\n    }\n\n    handleKeyUp({ keyCode }) {\n        let { valueList } = this.state;\n\n        if (keyCode == LEFT) {\n            valueList.prevValue();\n        } else if (keyCode == RIGHT) {\n            valueList.nextValue();\n        } else {\n            return;\n        }\n\n        this.setState({ valueList });\n    }\n\n    handleKeyClear() {\n        let { valueList } = this.state;\n\n        if (valueList) {\n            valueList = new ValueList(new Value(\"\"));\n            this.setState({ valueList });\n        }\n    }\n\n    handleKeyRemove() {\n        let { valueList } = this.state;\n\n        if (valueList) {\n            valueList.remove();\n            this.setState({ valueList });\n        }\n    }\n\n    render() {\n        let { keyboard, mapKeys, classes } = this.props;\n        let { valueList } = this.state;\n\n        return (\n            <Paper onKeyUp={this.handleKeyUp}>\n                <MathJax.Provider options={mathJaxConfig}>\n                    <Screen\n                        screenValue={valueList}\n                        onKeyUp={this.handleKeyUp}\n                        onClear={this.handleKeyClear}\n                        onRemove={this.handleKeyRemove}\n                    />\n                    <Grid container className={classes.container} spacing={0}>\n                        {keyboard.map(row => row.map(btn => (\n                            <Grid key={btn} item xs={Math.ceil(12/row.length)}>\n                                {mapKeys.get(btn)}\n                            </Grid>\n                        )))}\n                    </Grid>\n                </MathJax.Provider>\n            </Paper>\n        );\n    }\n}\n\nexport default withStyles(styles)(Component);\n","import React, { Component as ReactComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport MathJax from \"react-mathjax\";\n\nexport default class Component extends ReactComponent {\n    static propTypes = {\n        text: PropTypes.string.isRequired,\n        onClick: PropTypes.func.isRequired,\n        value: PropTypes.string.isRequired,\n        classes: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        const { onClick, value } = this.props;\n        onClick(value);\n    }\n\n    render() {\n        const { text, classes } = this.props;\n\n        return (\n            <Button className={classes.button} onClick={this.handleClick}>\n                <MathJax.Node formula={text} />\n            </Button>\n        );\n    }\n}\n","import { withStyles } from \"@material-ui/core/styles\";\nimport Component from \"./Component\";\n\nconst styles = () => ({\n    button: {\n        margin: 0,\n        width: \"100%\",\n        height: \"68px\",\n    },\n    input: {\n        display: \"none\",\n    },\n});\n\nexport default withStyles(styles)(Component);\n","import React from \"react\";\nimport Key from \"../Key\";\n\nexport class MapKeys {\n    constructor() {\n        this.map = new Map();\n    }\n\n    setCallback(callback) {\n        this.callback = callback;\n    }\n\n    get(key) {\n        return this.map.get(key);\n    }\n\n    set(key, val) {\n        return this.map.set(key, val);\n    }\n\n    getComponent(text, value) {\n        return (\n            <Key key={text + value} text={text} value={value} onClick={this.callback} />\n        );\n    }\n\n    setMap() {\n        this.setNumbersButtons();\n        this.set(\"=\", this.getComponent(\"=\", \"=\"));\n        this.set(\",\", this.getComponent(\",\", \",\"));\n        this.set(\"+\", this.getComponent(\"+\", \"+\"));\n        this.set(\"-\", this.getComponent(\"-\", \"-\"));\n        this.set(\"*\", this.getComponent(\"*\", \"*\"));\n        this.set(\"/\", this.getComponent(\"\\\\frac{x}{y}\", \"/\"));\n        this.set(\"(\", this.getComponent(\"(\", \"(\"));\n        this.set(\")\", this.getComponent(\")\", \")\"));\n        this.set(\"^\", this.getComponent(\"x^y\", \"^\"));\n        this.set(\"sqrt\", this.getComponent(\"\\\\sqrt[y]{x}\", \"sqrt\"));\n    }\n\n    setNumbersButtons() {\n        for (let index = 0; index <= 9; index++) {\n            this.set(\n                index.toString(),\n                this.getComponent(index.toString(), index.toString())\n            );\n        }\n    }\n}\n\nexport default new MapKeys();\n","import Value from \"./Value\";\nimport ValueList from \"./ValueList\";\n\nexport const DIVIDER = \"DIVIDER\";\nexport const DIVIDEND = \"DIVIDEND\";\n\nexport default class Fraction extends Value {\n    /**\n     *\n     * @param {Object} prevValue\n     */\n    constructor(prevValue) {\n        super(\"/\", prevValue);\n        this.divider = null;\n\n        let value = new Value(\"\");\n        value.toggleCursor();\n\n        this.dividend = new ValueList(value);\n        this.currentCursor = DIVIDEND;\n    }\n\n    /**\n     *  Add value in divider\n     *\n     * @param {Object} divider\n     */\n    addDivider(divider) {\n        if (this.currentCursor === DIVIDEND) {\n            this.unfocus();\n            this.currentCursor = DIVIDER;\n        }\n\n        if (!this.divider) {\n            return this.divider = new ValueList(divider);\n        }\n\n        this.divider.addValue(divider);\n    }\n\n    /**\n     *  Add value in dividend\n     *\n     * @param {Object} dividend\n     */\n    addDividend(dividend) {\n        if (this.currentCursor === DIVIDER) {\n            this.unfocus();\n            this.currentCursor = DIVIDEND;\n        }\n\n        this.dividend.addValue(dividend);\n    }\n\n    /**\n     *  Get context key\n     *\n     * @returns {String}\n     */\n    getContext() {\n        return \"fraction\";\n    }\n\n    /**\n     * unfocus fraction\n     *\n     */\n    unfocus() {\n        if (this.dividend) {\n            this.dividend.unfocus();\n        }\n\n        if (this.divider) {\n            this.divider.unfocus();\n        }\n\n        this.currentCursor = null;\n    }\n\n    /**\n     * Set cursor in operator\n     *\n     * @param {String} operator\n     */\n    setCursor(operator) {\n        if (operator === DIVIDER) {\n            if (this.divider) {\n                this.divider.focusFirst();\n            } else {\n                this.divider = new ValueList(new Value(\"\"));\n            }\n\n            this.currentCursor = DIVIDER;\n        } else {\n            if (this.dividend) {\n                this.dividend.focusLast();\n            } else {\n                this.dividend = new ValueList(new Value(\"\"));\n            }\n\n            this.currentCursor = DIVIDEND;\n        }\n    }\n\n    /**\n     * get the current value\n     *\n     * @returns {Object}\n     */\n    getCurrentValue() {\n        if (this.currentCursor == DIVIDER) {\n            return this.divider.value;\n        }\n\n        return this.dividend.value;\n    }\n\n    /**\n     *  Change value direction\n     *\n     * @param {String} direction\n     * @returns {Object}\n     */\n    changeValue(direction) {\n        if (this.currentCursor == DIVIDER) {\n            return this.divider[direction]();\n        }\n\n        return this.dividend[direction]();\n    }\n\n    /**\n     *\n     *\n     */\n    remove() {\n        if (this.currentCursor == DIVIDER) {\n            return this.divider.remove();\n        }\n\n        return this.dividend.remove();\n    }\n\n    /**\n     * set prentheses\n     *\n     * @param {String} value\n     *\n     * @returns {String}\n     */\n    setParentheses(value) {\n        return value.length > 1 ? `[${value}]` : value;\n    }\n\n    /**\n     * get value\n     *\n     * @returns {String}\n     */\n    value() {\n        let dividend = this.setParentheses(this.getDividendValue());\n        let divider = this.setParentheses(this.getDividerValue());\n\n        return `${dividend}/${divider}`;\n    }\n\n    /**\n     * get TEX value\n     *\n     * @returns {String}\n     */\n    valueTeX() {\n        return `\\\\frac{${this.getDividendTeX()}}{${this.getDividerTeX()}}`;\n    }\n\n    /**\n     * get divider TEX\n     *\n     * @returns {String}\n     */\n    getDividerTeX() {\n        return this.divider ?\n            this.divider.last().getTeX() : \"\";\n    }\n\n    /**\n     * get dividend TEX\n     *\n     * @returns {String}\n     */\n    getDividendTeX() {\n        return this.dividend ?\n            this.dividend.last().getTeX() : \"\";\n    }\n\n    /**\n     * get divider Value\n     *\n     * @returns {String}\n     */\n    getDividerValue() {\n        return this.divider ?\n            this.divider.last().getValue() : \"\";\n    }\n\n    /**\n     * get dividend Value\n     *\n     * @returns {String}\n     */\n    getDividendValue() {\n        return this.dividend ?\n            this.dividend.last().getValue() : \"\";\n    }\n}\n","import Value from \"./Value\";\n\nexport default class Dot extends Value {\n    constructor(prevValue) {\n        super(\".\", prevValue);\n    }\n\n    valueTeX() {\n        if (this.cursor) {\n            return \",\\\\mid\";\n        }\n\n        return \",\";\n    }\n}\n","import Value from \"./Value\";\n\nexport default class Operator extends Value {\n    value() {\n        return \" \" + this.operator;\n    }\n\n    getValue() {\n        if (!this.prevValue) {\n            return this.value() + \" \";\n        }\n\n        return this.prevValue.getValue() + this.value() + \" \";\n    }\n\n    getTeX() {\n        if (!this.prevValue) {\n            return this.valueTeX() + \" \";\n        }\n\n        return this.prevValue.getTeX() + this.valueTeX() + \" \";\n    }\n}\n","import Value from \"./Value\";\nimport ValueList from \"./ValueList\";\n\nexport default class Exponent extends Value {\n    /**\n     *\n     * @param {Object} prevValue\n     */\n    constructor(prevValue) {\n        super(\"^\", prevValue);\n\n        let value = new Value(\"\");\n        value.toggleCursor();\n\n        this.valueList = new ValueList(value);\n    }\n\n    toggleCursor() {\n        super.toggleCursor();\n\n        if (this.cursor) {\n            this.valueList.focusLast();\n        }\n    }\n\n    /**\n     *\n     * @param {Object} value\n     */\n    addValue(value) {\n        this.valueList.addValue(value);\n    }\n\n    /**\n     *\n     */\n    remove() {\n        this.valueList.remove();\n    }\n\n    /**\n     * unfocus potentiation\n     *\n     */\n    unfocus() {\n        this.valueList.unfocus();\n    }\n\n    /**\n     * Get value\n     *\n     * @returns {String}\n     */\n    value() {\n        return `**[${this.valueList.last().getValue()}]`;\n    }\n\n    /**\n     * Get TEX value\n     *\n     * @returns {String}\n     */\n    valueTeX() {\n        return `^{${this.valueList.last().getTeX()}}`;\n    }\n\n    /**\n     *  Get context key\n     *\n     * @returns {String}\n     */\n    getContext() {\n        return \"exponent\";\n    }\n}\n","import Value from \"./Value\";\nimport ValueList from \"./ValueList\";\n\nexport const RADICAND = \"RADICAND\";\nexport const INDEX = \"INDEX\";\n\nexport default class Root extends Value {\n\n    /**\n     *\n     * @param {Object} prevValue\n     */\n    constructor(prevValue) {\n        super(\"sqrt\", prevValue);\n        this.index = null;\n\n        let value = new Value(\"\");\n        value.toggleCursor();\n\n        this.radicand = new ValueList(value);\n        this.currentCursor = RADICAND;\n    }\n\n    addRadicand(value) {\n        if (!this.isRadicand()) {\n            this.unfocus();\n            this.focus(RADICAND);\n        }\n\n        if (!this.radicand) {\n            this.radicand = new ValueList(value);\n            return;\n        }\n\n        this.radicand.addValue(value);\n    }\n\n    addIndex(value) {\n        if (!this.isIndex()) {\n            this.unfocus();\n            this.focus(INDEX);\n        }\n\n        if (!this.index) {\n            this.index = new ValueList(value);\n            return;\n        }\n\n        this.index.addValue(value);\n    }\n\n    focus(operator) {\n        this.cursor = true;\n\n        if (operator === RADICAND) {\n            this.currentCursor = RADICAND;\n            if (!this.radicand) return;\n            this.radicand.focusLast();\n            return;\n        }\n\n        this.currentCursor = INDEX;\n        if (!this.index) return;\n        this.index.focusLast();\n    }\n\n    toggleCursor() {\n        super.toggleCursor();\n\n        if (this.cursor) {\n            this.focus(RADICAND);\n        }\n    }\n\n    remove() {\n        if (this.isIndex()) {\n            return this.index.remove();\n        }\n\n        this.radicand.remove();\n    }\n\n    /**\n     * Get value\n     *\n     * @returns {String}\n     */\n    value() {\n        if (this.index)\n            return `sqrt(${this.radicand.last().getValue()}, ${this.index.last().getValue()})`;\n\n        return `sqrt(${this.radicand.last().getValue()})`;\n    }\n\n    /**\n     * Get TEX value\n     *\n     * @returns {String}\n     */\n    valueTeX() {\n        if (this.index)\n            return `\\\\sqrt[${this.index.last().getTeX()}]{${this.radicand.last().getTeX()}}`;\n\n        return `\\\\sqrt{${this.radicand.last().getTeX()}}`;\n    }\n\n    /**\n     * unfocus\n     *\n     */\n    unfocus() {\n        if (this.radicand) this.radicand.unfocus();\n        if (this.index) this.index.unfocus();\n\n        this.currentCursor = null;\n        this.cursor = false;\n    }\n\n    /**\n     * get the current value\n     *\n     * @returns {Object}\n     */\n    getCurrentValue() {\n        let valueList = this.index;\n\n        if (this.isRadicand()) {\n            valueList = this.radicand;\n        }\n\n        if (!valueList) return null;\n\n        return valueList.value;\n    }\n\n    /**\n     *  Change value direction\n     *\n     * @param {String} direction\n     * @returns {Object}\n     */\n    changeValue(direction) {\n        if (this.isRadicand()) {\n            return this.radicand[direction]();\n        }\n\n        return this.index[direction]();\n    }\n\n    toNextValue() {\n        if (this.isRadicand()) {\n            this.radicand.nextValue();\n        } else {\n            this.index.nextValue();\n        }\n    }\n\n    toPrevValue() {\n        if (this.isRadicand()) {\n            this.radicand.prevValue();\n        } else {\n            this.index.prevValue();\n        }\n    }\n\n    isRadicand() {\n        return this.currentCursor === RADICAND;\n    }\n\n    isIndex() {\n        return this.currentCursor === INDEX;\n    }\n\n    /**\n     *  Get context key\n     *\n     * @returns {String}\n     */\n    getContext() {\n        return \"root\";\n    }\n}\n","import Value from \"../Value/Value\";\nimport Fraction from \"../Value/Fraction\";\nimport Dot from \"../Value/Dot\";\nimport Operator from \"../Value/Operator\";\nimport Exponent from \"../Value/Exponent\";\nimport Root from \"../Value/Root\";\n\nclass MapEvents {\n    constructor() {\n        this.map = new Map();\n    }\n\n    set(key, callback) {\n        this.map.set(key, callback);\n    }\n\n    get(key) {\n        return this.map.get(key);\n    }\n\n    setMap() {\n        this.setNumbersButtons();\n        this.set(\"=\", (value) => (new Operator(\"=\", value)));\n        this.set(\",\", (value) => (new Dot(value)));\n        this.set(\"+\", (value) => (new Operator(\"+\", value)));\n        this.set(\"-\", (value) => (new Operator(\"-\", value)));\n        this.set(\"*\", (value) => (new Operator(\"*\", value)));\n        this.set(\"/\", (value) => (new Fraction(value)));\n        this.set(\"(\", (value) => (new Value(\"(\", value)));\n        this.set(\")\", (value) => (new Value(\")\", value)));\n        this.set(\"^\", (value) => (new Exponent(value)));\n        this.set(\"sqrt\", (value) => (new Root(value)));\n    }\n\n    setNumbersButtons() {\n        for (let index = 0; index <= 9; index++) {\n            this.set(\n                index.toString(),\n                (value) => (new Value(index.toString(), value))\n            );\n        }\n    }\n}\n\nexport default new MapEvents();\n","export const defaultKeyboard = [\n    [\"1\", \"2\", \"3\", \"+\"],\n    [\"4\", \"5\", \"6\", \"-\"],\n    [\"7\", \"8\", \"9\", \"*\"],\n    [\",\", \"0\", \"=\", \"/\"],\n    [\"(\", \")\", \"^\", \"sqrt\"],\n];\n","export default class BaseCommand {\n    /**\n     *\n     * @param {Object} currentValue\n     */\n    constructor(currentValue) {\n        this.currentValue = currentValue;\n    }\n\n    /**\n     * @return {Object}\n     */\n    execute() {\n        throw \"Method not implemented\";\n    }\n\n    /**\n     * @return {boolean}\n     */\n    isEmptyValue() {\n        return this.currentValue.operator === \"\";\n    }\n\n    /**\n     * @return {boolean}\n     */\n    nextIsNull() {\n        return this.currentValue.nextValue === null ||\n            this.currentValue.nextValue === undefined;\n    }\n\n    /**\n     * @return {boolean}\n     */\n    prevIsNull() {\n        return this.currentValue.prevValue === null ||\n            this.currentValue.prevValue === undefined;\n    }\n}\n","import BaseCommand from \"../BaseCommand\";\n\nexport default class AddValue extends BaseCommand {\n\n    /**\n     *\n     * @param {Object} currentValue\n     * @param {Object} newValue\n     */\n    constructor(currentValue, newValue) {\n        super(currentValue);\n        this.newValue = newValue;\n    }\n\n    /**\n     * @return {Object}\n     */\n    execute() {\n        if (this.isEmptyValue()) {\n            this.replaceValue();\n        } else {\n            this.addValue();\n        }\n\n        this.newValue.cursor = true;\n\n        return this.newValue;\n    }\n\n    /**\n     *\n     */\n    replaceValue() {\n        let nextValue = this.currentValue.nextValue;\n        let prevValue = this.currentValue.prevValue;\n\n        if (nextValue) {\n            nextValue.prevValue = this.newValue;\n            this.newValue.nextValue = nextValue;\n        }\n\n        if (prevValue) {\n            prevValue.nextValue = this.newValue;\n            this.newValue.prevValue = prevValue;\n        }\n    }\n\n    /**\n     *\n     */\n    addValue() {\n        this.newValue.setPrevValue(this.currentValue);\n        this.currentValue.setNextValue(this.newValue);\n        this.currentValue.cursor = false;\n    }\n}\n","import Value from \"../../../Value\";\nimport BaseCommand from \"../BaseCommand\";\nimport { NEXT_VALUE, PREV_VALUE } from \"../../../ValueList\";\nimport { DIVIDEND, DIVIDER } from \"../../../Fraction\";\n\nexport default class ChangeValue extends BaseCommand {\n    /**\n     *\n     * @param {Object} currentValue\n     * @param {string} direction\n     */\n    constructor(currentValue, direction) {\n        super(currentValue);\n        this.direction = direction;\n    }\n\n    /**\n     * @returns {Object}\n     */\n    execute() {\n        if (this.direction === NEXT_VALUE) {\n            return this.nextValue();\n        }\n\n        return this.prevValue();\n    }\n\n    /**\n     * @returns {Object}\n     */\n    nextValue() {\n        if (this.nextIsNull()) return null;\n\n        let nextValue = this.currentValue.nextValue;\n\n        if (this.isEmptyValue()) {\n            if (this.currentValue.prevValue) {\n                nextValue.setPrevValue(this.currentValue.prevValue);\n                nextValue.prevValue.nextValue = nextValue;\n            } else {\n                nextValue.prevValue = undefined;\n            }\n        } else {\n            nextValue.prevValue.cursor = false;\n        }\n\n        nextValue.toggleCursor();\n\n        return this.setFraction(nextValue);\n    }\n\n    /**\n     * @returns {Object}\n     */\n    prevValue() {\n        if (this.isEmptyValue() && this.prevIsNull()) return null;\n\n        let prevValue = this.currentValue.prevValue;\n\n        if (this.prevIsNull()) {\n            prevValue = new Value(\"\");\n            prevValue.setNextValue(this.currentValue);\n        }\n\n        if (this.isEmptyValue()) {\n            if (this.currentValue.nextValue) {\n                this.currentValue.nextValue.setPrevValue(prevValue);\n                prevValue.nextValue = this.currentValue.nextValue;\n            } else {\n                prevValue.nextValue = undefined;\n            }\n        } else {\n            prevValue.nextValue.prevValue = prevValue;\n            prevValue.nextValue.cursor = false;\n        }\n\n        prevValue.toggleCursor();\n\n        return this.setFraction(prevValue);\n    }\n\n    setFraction(value) {\n        let className = value.constructor.name;\n\n        if (className !== \"Fraction\") return value;\n        value.unfocus();\n\n        if (this.direction === PREV_VALUE && this.isEmptyValue()) {\n            value.setCursor(DIVIDER);\n            value.divider.focusLast();\n\n            return value;\n        }\n\n        if (this.direction === PREV_VALUE) {\n            let newValue = new Value(\"\");\n            value.cursor = false;\n            value.setNextValue(newValue);\n            newValue.setPrevValue(value);\n            newValue.cursor = true;\n\n            return newValue;\n        }\n\n        value.setCursor(DIVIDEND);\n        value.dividend.focusFirst();\n\n        return value;\n    }\n}\n","import AddValue from \"./Commands/Value/AddValue\";\nimport ChangeValue from \"./Commands/Value/ChangeValue\";\nimport Value from \"../Value\";\n\nexport default class ValueStrategy {\n    /**\n     *\n     * @param {Object} currentValue\n     */\n    constructor(currentValue) {\n        this.currentValue = currentValue;\n    }\n\n    /**\n     *\n     * @param {Object} value\n     *\n     * @returns {Object}\n     */\n    addValue(value) {\n        let addValue = new AddValue(this.currentValue, value);\n        return addValue.execute();\n    }\n\n    /**\n     *\n     * @returns {Object}\n     */\n    remove() {\n        let prevValue = this.currentValue.prevValue;\n        let nextValue = this.currentValue.nextValue;\n\n        if (!prevValue) {\n            prevValue = new Value(\"\");\n        }\n\n        if (prevValue.getContext() !== \"value\") {\n            if (this.currentValue.operator == \"\") {\n                prevValue = prevValue.prevValue;\n\n                if (!prevValue) {\n                    prevValue = new Value(\"\");\n                }\n            } else {\n                prevValue = new Value(\"\", prevValue);\n            }\n        }\n\n        if (nextValue) {\n            prevValue.nextValue = nextValue;\n            nextValue.prevValue = prevValue;\n        } else {\n            prevValue.nextValue = undefined;\n        }\n\n        prevValue.toggleCursor();\n\n        return prevValue;\n    }\n\n    /**\n     *\n     * @returns {any}\n     */\n    changeValue(direction) {\n        let changeValue = new ChangeValue(this.currentValue, direction);\n        return changeValue.execute();\n    }\n\n    /**\n     *  change to next value\n     *\n     * @returns {Object}\n     */\n    changeToNext() {\n        let newValue = new Value(\"\", this.currentValue);\n        newValue.cursor = true;\n\n        this.currentValue.setNextValue(newValue);\n\n        return newValue;\n    }\n\n    /**\n     * change to prev value\n     *\n     * @returns {Object}\n     */\n    changeToPrev() {\n        if (this.currentValue.prevValue) {\n            this.currentValue.prevValue.cursor = true;\n\n            return this.currentValue.prevValue;\n        }\n\n        let newValue = new Value(\"\");\n        newValue.setNextValue(this.currentValue);\n        newValue.cursor = true;\n\n        this.currentValue.setPrevValue(newValue);\n\n        return newValue;\n    }\n}\n","import BaseCommand from \"../BaseCommand\";\nimport { DIVIDEND, DIVIDER } from \"../../../Fraction\";\nimport { NEXT_VALUE } from \"../../../ValueList\";\n\n/**\n * Get the current value\n *\n * @returns {Object}\n */\nconst getCurrentValue = (fraction) => {\n    let valueList = fraction.divider;\n\n    if (fraction.currentCursor === DIVIDEND) {\n        valueList = fraction.dividend;\n    }\n\n    return valueList.value;\n};\n\nexport default class ChangeValue extends BaseCommand {\n    /**\n     *\n     * @param {Object} fraction\n     * @param {string} direction\n     */\n    constructor(fraction, direction) {\n        super(getCurrentValue(fraction));\n        this.fraction = fraction;\n        this.direction = direction;\n    }\n\n    /**\n     *\n     */\n    execute() {\n        if (this.direction === NEXT_VALUE) {\n            return this.nextValue();\n        }\n\n        return this.prevValue();\n    }\n\n    /**\n     * set next value\n     *\n     * @returns {Object}\n     */\n    nextValue() {\n        if (this.isDividend()) {\n            if (this.nextIsNull()) {\n                this.fraction.unfocus();\n                this.fraction.setCursor(DIVIDER);\n            } else {\n                this.fraction.dividend.nextValue();\n            }\n\n            return this.fraction;\n        }\n\n        if (this.nextIsNull()) {\n            this.fraction.unfocus();\n            return null;\n        }\n\n        this.fraction.divider.nextValue();\n\n        return this.fraction;\n    }\n\n    /**\n     * set prev value\n     *\n     * @returns {Object}\n     */\n    prevValue() {\n        if (this.isDividend()) {\n            if (this.prevIsNull() && this.isEmptyValue()) {\n                this.fraction.unfocus();\n                return null;\n            }\n\n            this.fraction.dividend.prevValue();\n            return this.fraction;\n        }\n\n        if (this.prevIsNull()) {\n            if (this.isEmptyValue()) {\n                if (this.nextIsNull()) {\n                    this.fraction.divider = null;\n                } else {\n                    let value = this.fraction.divider.value;\n                    let next = value.nextValue;\n                    next.prevValue = null;\n                    this.fraction.divider.value = next;\n                    this.fraction.divider.focus();\n                    this.fraction.unfocus();\n                }\n\n                this.fraction.setCursor(DIVIDEND);\n            } else {\n                this.fraction.divider.prevValue();\n            }\n        } else {\n            this.fraction.divider.prevValue();\n        }\n\n        return this.fraction;\n    }\n\n    /**\n     * is dividend?\n     *\n     * @returns {boolean}\n     */\n    isDividend() {\n        return this.fraction.currentCursor === DIVIDEND;\n    }\n}\n","import ValueStrategy from \"./ValueStrategy\";\nimport { DIVIDER } from \"../Fraction\";\nimport ChangeValue from \"./Commands/Fraction/ChangeValue\";\nimport { NEXT_VALUE } from \"../ValueList\";\n\nexport default class FractionStrategy extends ValueStrategy {\n    /**\n     *\n     * @param {Object} value\n     */\n    addValue(value) {\n        if (this.currentValue.currentCursor === DIVIDER) {\n            this.currentValue.addDivider(value);\n        } else {\n            this.currentValue.addDividend(value);\n        }\n\n        return this.currentValue;\n    }\n\n    /**\n     *\n     * @returns {Object}\n     */\n    remove() {\n        this.currentValue.remove();\n        return this.currentValue;\n    }\n    /**\n     *\n     * @returns {Object}\n     */\n    changeValue(direction) {\n        let value = this.currentValue.getCurrentValue();\n\n        if (value && value.getContext() !== \"value\") {\n            this.currentValue.changeValue(direction);\n            return this.currentValue;\n        }\n\n        let command = new ChangeValue(this.currentValue, direction);\n        let result = command.execute();\n\n        if (result) return result;\n\n        this.currentValue.unfocus();\n\n        if (direction === NEXT_VALUE) {\n            return this.changeToNext();\n        }\n\n        return this.changeToPrev();\n    }\n}\n","import ValueStrategy from \"./ValueStrategy\";\nimport { NEXT_VALUE } from \"../ValueList\";\nimport Value from \"../Value\";\n\nexport default class ExponentStrategy extends ValueStrategy {\n    /**\n     *\n     * @param {Object} value\n     * @returns {Object}\n     */\n    addValue(value) {\n        this.currentValue.addValue(value);\n        return this.currentValue;\n    }\n\n    /**\n     *\n     * @returns {any}\n     */\n    changeValue(direction) {\n        if (direction == NEXT_VALUE) {\n            return this.nextValue();\n        }\n\n        return this.prevValue();\n    }\n\n    remove() {\n        this.currentValue.remove();\n    }\n\n    nextValue() {\n        let currentValue = this.currentValue.valueList.value;\n        let nextValue = currentValue.nextValue;\n\n        if (nextValue) {\n            this.currentValue.valueList.nextValue();\n            return this.currentValue;\n        }\n\n        if (currentValue.getContext() !== \"value\") {\n            this.currentValue.valueList.nextValue();\n            return this.currentValue;\n        }\n\n        nextValue = new Value(\"\", this.currentValue);\n        this.currentValue.unfocus();\n        this.currentValue.cursor = false;\n        this.currentValue.setNextValue(nextValue);\n        nextValue.cursor = true;\n\n        return nextValue;\n    }\n\n    prevValue() {\n        let currentValue = this.currentValue.valueList.value;\n        let prevValue = currentValue.prevValue;\n\n        if (prevValue) {\n            this.currentValue.valueList.prevValue();\n            return this.currentValue;\n        }\n\n        if (currentValue.getContext() !== \"value\") {\n            this.currentValue.valueList.prevValue();\n            return this.currentValue;\n        }\n\n        if (currentValue.operator === \"\") {\n            currentValue.nextValue.prevValue = undefined;\n            this.currentValue.valueList.value = currentValue.nextValue;\n            this.currentValue.unfocus();\n            this.currentValue.cursor = false;\n\n            return this.getPrev();\n        }\n\n        let newValue = new Value(\"\");\n        newValue.setNextValue(currentValue);\n        currentValue.setPrevValue(newValue);\n\n        this.currentValue.valueList.prevValue();\n        return this.currentValue;\n    }\n\n    getPrev() {\n        let prevValue = this.currentValue.prevValue;\n\n        if (!prevValue) {\n            prevValue = new Value(\"\");\n            prevValue.setNextValue(this.currentValue);\n        }\n\n        prevValue.cursor = true;\n\n        return prevValue;\n    }\n}\n","import BaseCommand from \"../BaseCommand\";\nimport { INDEX, RADICAND } from \"../../../Root\";\nimport Value from \"../../../Value\";\nimport ValueList, { NEXT_VALUE } from \"../../../ValueList\";\n\nexport default class ChangeValue extends BaseCommand {\n    /**\n     *\n     * @param {Object} root\n     * @param {string} direction\n     */\n    constructor(root, direction) {\n        super(root.getCurrentValue());\n        this.root = root;\n        this.direction = direction;\n    }\n\n    /**\n     *  Execute the command to change position value\n     *\n     * @returns {Object}\n     */\n    execute() {\n        if (this.direction === NEXT_VALUE) {\n            return this.nextValue();\n        }\n\n        return this.prevValue();\n    }\n\n    /**\n     * set next value\n     *\n     * @returns {Object}\n     */\n    nextValue() {\n        if (this.nextIsNull()) {\n            if (this.root.isRadicand()) return null;\n\n            this.root.unfocus();\n            this.root.focus(RADICAND);\n\n            if (!this.root.radicand) {\n                this.root.radicand = new ValueList(new Value(\"\"));\n                this.root.radicand.boot();\n            }\n        } else {\n            this.root.toNextValue();\n        }\n\n        return this.root;\n    }\n\n    /**\n     * set prev value\n     *\n     * @returns {Object}\n     */\n    prevValue() {\n        if (this.prevIsNull() && this.isEmptyValue()) {\n            if (this.nextIsNull()) {\n                this.changeToNullValue();\n            } else {\n                let nextValue = this.currentValue.nextValue;\n                nextValue.prevValue = null;\n                this.setCurrentValue(nextValue);\n            }\n\n            if (this.root.isIndex()) return null;\n\n            this.root.unfocus();\n            this.root.focus(INDEX);\n\n            if (!this.root.index) {\n                this.root.index = new ValueList(new Value(\"\"));\n                this.root.index.boot();\n            }\n\n            return this.root;\n        }\n\n        if (this.prevIsNull()) {\n            let value = new Value(\"\");\n            value.setNextValue(this.currentValue);\n            this.currentValue.setPrevValue(value);\n        }\n\n        this.root.toPrevValue();\n        return this.root;\n    }\n\n    setCurrentValue(value) {\n        if (this.root.isIndex()) {\n            this.root.index.value = value;\n        } else {\n            this.root.radicand.value = value;\n        }\n    }\n\n    changeToNullValue() {\n        if (this.root.isIndex()) {\n            this.root.index = null;\n        } else {\n            this.root.radicand = null;\n        }\n    }\n}\n","import ValueStrategy from \"./ValueStrategy\";\nimport ChangeValue from \"./Commands/Root/ChangeValue\";\nimport { NEXT_VALUE } from \"../ValueList\";\n\nexport default class RootStrategy extends ValueStrategy {\n    /**\n     *\n     * @param {Object} value\n     * @returns {Object}\n     */\n    addValue(value) {\n        if (this.currentValue.isRadicand()) {\n            this.currentValue.addRadicand(value);\n        } else {\n            this.currentValue.addIndex(value);\n        }\n\n        return this.currentValue;\n    }\n\n    /**\n     *\n     * @returns {Object}\n     */\n    remove() {\n        this.currentValue.remove();\n        return this.currentValue;\n    }\n\n    /**\n     *\n     * @returns {Object}\n     */\n    changeValue(direction) {\n        let value = this.currentValue.getCurrentValue();\n\n        if (value && value.getContext() !== \"value\") {\n            this.currentValue.changeValue(direction);\n            return this.currentValue;\n        }\n\n        let command = new ChangeValue(this.currentValue, direction);\n        let result = command.execute();\n\n        if (result) return result;\n\n        this.currentValue.unfocus();\n\n        if (direction === NEXT_VALUE) {\n            return this.changeToNext();\n        }\n\n        return this.changeToPrev();\n    }\n}\n","import FractionStrategy from \"../Value/Strategies/FractionStrategy\";\nimport ValueStrategy from \"../Value/Strategies/ValueStrategy\";\nimport ExponentStrategy from \"../Value/Strategies/ExponentStrategy\";\nimport RootStrategy from \"../Value/Strategies/RootStrategy\";\n\nexport default {\n    \"fraction\": FractionStrategy,\n    \"value\": ValueStrategy,\n    \"exponent\": ExponentStrategy,\n    \"root\": RootStrategy,\n};\n","import React, { Component as ReactComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport defaultMapKeys from \"./MapKeys\";\nimport defaultMapEvents from \"./MapEvents\";\nimport { defaultKeyboard } from \"./keyboards\";\nimport contextConfig from \"./contextConfig\";\n\nexport default () => {\n    let mapKeys = defaultMapKeys;\n    let keyboard = defaultKeyboard;\n    let mapEvents = defaultMapEvents;\n\n    return (WrappedComponent) => class WithKeyboard extends ReactComponent {\n        static propTypes = {\n            keyboard: PropTypes.array,\n            mapKeys: PropTypes.object,\n            mapEvents: PropTypes.object,\n            contextConfig: PropTypes.object,\n        };\n\n        render() {\n            let props = {\n                keyboard,\n                mapKeys,\n                mapEvents,\n                contextConfig,\n                ...this.props\n            };\n\n            return (\n                <WrappedComponent {...props} />\n            );\n        }\n    };\n};\n","import Component from \"./Component\";\nimport withKeyboard from \"./withKeyboard\";\n\nexport default withKeyboard()(Component);\n"],"names":["Math","props","state","handleOnRender","bind","timeCursor","value","setState","nextProps","load","setCursor","mathList","document","getElementsByClassName","el","mjxEls","mjx","innerHTML","style","fontSize","setInterval","visibility","parentElement","marginLeft","display","currentValue","React","getStyle","Component","propTypes","PropTypes","string","styles","Screen","screenValue","last","getTeX","classes","onKeyUp","onClear","onRemove","root","actionBtn","Backspace","icon","screen","renderValue","object","isRequired","func","withStyles","appConfig","init","config","freeze","ValueContext","strategy","addValue","remove","direction","changeValue","context","getContext","NEXT_VALUE","PREV_VALUE","ValueList","boot","cursor","unfocus","focus","first","nextValue","prevValue","contextFactory","newValue","Object","assign","LEFT","RIGHT","Value","operator","setPrevValue","getValue","valueTeX","parse","mapEvents","get","charAt","valueList","i","length","green","mathJaxConfig","clickBuntton","handleKeyUp","handleKeyClear","handleKeyRemove","mapKeys","setCallback","setMap","contextConfig","btn","val","log","keyCode","keyboard","container","map","row","ceil","ReactComponet","array","handleClick","onClick","text","button","ReactComponent","MapKeys","Map","callback","key","set","setNumbersButtons","getComponent","index","toString","DIVIDER","DIVIDEND","Fraction","divider","toggleCursor","dividend","currentCursor","focusFirst","focusLast","setParentheses","getDividendValue","getDividerValue","getDividendTeX","getDividerTeX","Dot","Operator","Exponent","RADICAND","INDEX","Root","radicand","isRadicand","isIndex","MapEvents","defaultKeyboard","BaseCommand","undefined","AddValue","isEmptyValue","replaceValue","setNextValue","ChangeValue","nextIsNull","setFraction","prevIsNull","className","constructor","name","ValueStrategy","execute","getCurrentValue","fraction","isDividend","next","FractionStrategy","addDivider","addDividend","command","result","changeToNext","changeToPrev","ExponentStrategy","getPrev","toNextValue","changeToNullValue","setCurrentValue","toPrevValue","RootStrategy","addRadicand","addIndex","defaultMapKeys","defaultMapEvents","WrappedComponent","withKeyboard"],"mappings":"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"}