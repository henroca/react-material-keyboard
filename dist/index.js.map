{"version":3,"file":"index.js","sources":["../src/Screen/Math.jsx","../src/Screen/Screen.jsx","../src/Value/Value.js","../src/Value/Strategies/Commands/BaseCommand.js","../src/Value/Strategies/Commands/Value/AddValue.js","../src/Value/Fraction.js","../src/Value/Strategies/Commands/Value/ChangeValue.js","../src/Value/Strategies/ValueStrategy.js","../src/Value/Strategies/Commands/Fraction/ChangeValue.js","../src/Value/Strategies/FractionStrategy.js","../src/Value/Strategies/ValueContext.js","../src/Value/ValueList.js","../src/keyConsts.js","../src/Keyboard/Component.jsx","../src/Key/Component.jsx","../src/Key/Key.jsx","../src/Keyboard/MapKeys.js","../src/Value/Dot.js","../src/Value/Operator.js","../src/Keyboard/MapEvents.js","../src/Keyboard/keyboards.js","../src/Keyboard/withKeyboard.jsx","../src/Keyboard/Keyboard.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MathJax from \"react-mathjax\";\n\nexport default class Math extends React.Component {\n    static propTypes = {\n        value: PropTypes.string,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            load: true,\n            currentValue: \"\",\n        };\n\n        this.handleOnRender = this.handleOnRender.bind(this);\n        this.timeCursor = null;\n    }\n\n    handleOnRender() {\n        let { value } = this.props;\n\n        this.setState({\n            load: false,\n            currentValue: value,\n        });\n    }\n\n    componentWillUpdate(nextProps) {\n        if (nextProps.value != this.props.value) {\n            this.setState({ load: true });\n        }\n    }\n\n    componentDidMount() {\n        this.setCursor();\n    }\n\n    componentDidUpdate() {\n        this.setCursor();\n    }\n\n    setCursor() {\n        if (this.timeCursor) {\n            clearInterval(this.timeCursor);\n        }\n\n        let mathList = document.getElementsByClassName(\"math\");\n\n        for (let el of mathList) {\n            let mjxEls = el.getElementsByClassName(\"mjx-char\")\n\n            for (let mjx of mjxEls) {\n                if (mjx.innerHTML == 'âˆ£') {\n                    mjx.style.fontSize = \"1.4em\";\n                    this.timeCursor = setInterval((el) => {\n                        if (mjx.style.visibility == 'hidden') {\n                            mjx.style.visibility = 'visible';\n                        } else {\n                            mjx.style.visibility = 'hidden';\n                        }\n                    }, 500);\n                }\n\n                mjx.parentElement.style.marginLeft = \"0\";\n            }\n        }\n    }\n\n    getStyle(load) {\n        return { display: load ? \"none\" : \"block\" };\n    }\n\n    render() {\n        let { value } = this.props;\n        let { currentValue, load } = this.state;\n\n        return (\n            <React.Fragment>\n                <div style={this.getStyle(load)} className=\"math\">\n                    <MathJax.Node formula={value} onRender={this.handleOnRender} />\n                </div>\n\n                <div style={this.getStyle(!load)} className=\"math\">\n                    <MathJax.Node formula={currentValue} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PropTypes from \"prop-types\";\nimport Math from \"./Math\";\nimport { Backspace } from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = () => ({\n    root: {\n        height: \"150px\",\n        padding: \"1em 2em\",\n    },\n    icon: {\n        float: \"right\",\n    },\n    screen: {\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n});\n\nclass Screen extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        screenValue: PropTypes.object,\n    };\n\n    renderValue() {\n        let { screenValue } = this.props;\n\n        if (screenValue) {\n            return (<Math value={screenValue.last().getTeX()} />);\n        }\n\n        return (<span>Degite um valor</span>);\n    }\n\n    render() {\n        let { classes, onKeyUp } = this.props;\n\n        return (\n            <Grid container onKeyUp={onKeyUp} className={classes.root} spacing={0}>\n                <Grid item xs={6}>\n                    <span>LIMPAR</span>\n                </Grid>\n                <Grid item xs={6}>\n                    <Backspace className={classes.icon} fontSize=\"small\"/>\n                </Grid>\n                <Grid item xs={12} className={classes.screen}>\n                    {this.renderValue()}\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(styles)(Screen);\n","export default class Value {\n    constructor(operator, prevValue) {\n        this.nextValue = null;\n        this.prevValue = prevValue;\n        this.operator = operator;\n        this.cursor = false;\n    }\n\n    toggleCursor() {\n        this.cursor = !this.cursor;\n    }\n\n    setNextValue(nextValue) {\n        if (this.nextValue) {\n            nextValue.nextValue = this.nextValue;\n            nextValue.nextValue.setPrevValue(nextValue);\n        }\n\n        this.nextValue = nextValue;\n    }\n\n    setPrevValue(prevValue) {\n        this.prevValue = prevValue;\n    }\n\n    value() {\n        return this.operator;\n    }\n\n    valueTeX() {\n        if (this.cursor) {\n            return this.value() + \"\\\\mid\";\n        }\n\n        return this.value();\n    }\n\n    getValue() {\n        if (!this.prevValue) {\n            return this.value();\n        }\n\n        return this.prevValue.getValue() + this.value();\n    }\n\n    getTeX() {\n        if (!this.prevValue) {\n            return this.valueTeX();\n        }\n\n        return this.prevValue.getTeX() + this.valueTeX();\n    }\n}\n","import Value from \"../../Value\";\n\nexport default class BaseCommand {\n    /**\n     *\n     * @param {Value} currentValue\n     */\n    constructor(currentValue) {\n        this.currentValue = currentValue;\n    }\n\n    /**\n     * @return {Value}\n     */\n    execute() {\n        throw \"Method not implemented\";\n    }\n\n    /**\n     * @return {boolean}\n     */\n    isEmptyValue() {\n        return this.currentValue.operator === ''\n    }\n\n    /**\n     * @return {boolean}\n     */\n    nextIsNull() {\n        return this.currentValue.nextValue === null ||\n            this.currentValue.nextValue === undefined;\n    }\n\n    /**\n     * @return {boolean}\n     */\n    prevIsNull() {\n        return this.currentValue.prevValue === null ||\n            this.currentValue.prevValue === undefined;\n    }\n}\n","import Value from \"../../../Value\";\nimport BaseCommand from \"../BaseCommand\";\n\nexport default class AddValue extends BaseCommand {\n\n    /**\n     *\n     * @param {Value} currentValue\n     * @param {Value} newValue\n     */\n    constructor(currentValue, newValue) {\n        super(currentValue);\n        this.newValue = newValue;\n    }\n\n    /**\n     * @return {Value}\n     */\n    execute() {\n        if (this.isEmptyValue()) {\n            this.replaceValue();\n        } else {\n            this.addValue();\n        }\n\n        this.newValue.cursor = true;\n\n        return this.newValue;\n    }\n\n    /**\n     *\n     */\n    replaceValue() {\n        let nextValue = this.currentValue.nextValue;\n        let prevValue = this.currentValue.prevValue;\n\n        if (nextValue) {\n            nextValue.prevValue = this.newValue;\n            this.newValue.nextValue = nextValue;\n        }\n\n        if (prevValue) {\n            prevValue.nextValue = this.newValue;\n            this.newValue.prevValue = prevValue;\n        }\n    }\n\n    /**\n     *\n     */\n    addValue() {\n        this.newValue.setPrevValue(this.currentValue);\n        this.currentValue.setNextValue(this.newValue);\n        this.currentValue.cursor = false;\n    }\n}\n","import Value from \"./Value\";\nimport ValueList from \"./ValueList\";\n\nexport const DIVIDER = \"DIVIDER\";\nexport const DIVIDEND = \"DIVIDEND\";\n\nexport default class Fraction extends Value {\n    /**\n     *\n     * @param {Value} prevValue\n     */\n    constructor(prevValue) {\n        super(\"/\", prevValue);\n        this.divider = null;\n\n        let value = new Value('');\n        value.toggleCursor();\n\n        this.dividend = new ValueList(value);\n        this.currentCursor = DIVIDEND;\n    }\n\n    /**\n     *\n     * @param {Value} divider\n     */\n    addDivider(divider) {\n        if (this.currentCursor === DIVIDEND) {\n            this.unfocus();\n            this.currentCursor = DIVIDER;\n        }\n\n        if (!this.divider) {\n            return this.divider = new ValueList(divider);\n        }\n\n        this.divider.addValue(divider);\n    }\n\n    /**\n     *\n     * @param {Value} dividend\n     */\n    addDividend(dividend) {\n        if (this.currentCursor === DIVIDER) {\n            this.unfocus();\n            this.currentCursor = DIVIDEND;\n        }\n\n        this.dividend.addValue(dividend);\n    }\n\n    unfocus() {\n        if (this.dividend) {\n            this.dividend.unfocus();\n        }\n\n        if (this.divider) {\n            this.divider.unfocus();\n        }\n\n        this.currentCursor = null;\n    }\n\n    setCursor(operator) {\n        if (operator === DIVIDER) {\n            if (this.divider) {\n                this.divider.focusFirst();\n            } else {\n                this.divider = new ValueList(new Value(''));\n            }\n\n            this.currentCursor = DIVIDER;\n        } else {\n            if (this.dividend) {\n                this.dividend.focusLast();\n            } else {\n                this.dividend = new ValueList(new Value(''));\n            }\n\n            this.currentCursor = DIVIDEND;\n        }\n    }\n\n    setParentheses(value) {\n        return value.length > 1 ? `(${value})` : value;\n    }\n\n    value() {\n        let dividend = this.setParentheses(this.getDividendValue());\n        let divider = this.setParentheses(this.getDividerValue());\n\n        return `${dividend}/${divider}`;\n    }\n\n    valueTeX() {\n        return `\\\\frac{${this.getDividendTeX()}}{${this.getDividerTeX()}}`;\n    }\n\n    getDividerTeX() {\n        return this.divider ?\n            this.divider.last().getTeX() : '';\n    }\n\n    getDividendTeX() {\n        return this.dividend ?\n            this.dividend.last().getTeX() : '';\n    }\n\n    getDividerValue() {\n        return this.divider ?\n            this.divider.last().getValue() : '';\n    }\n\n    getDividendValue() {\n        return this.dividend ?\n            this.dividend.last().getValue() : '';\n    }\n}\n","import Value from \"../../../Value\";\nimport BaseCommand from \"../BaseCommand\";\nimport { NEXT_VALUE, PREV_VALUE } from \"../../../ValueList\";\nimport { DIVIDEND, DIVIDER } from \"../../../Fraction\";\n\nexport default class ChangeValue extends BaseCommand {\n    /**\n     *\n     * @param {Value} currentValue\n     * @param {string} direction\n     */\n    constructor(currentValue, direction) {\n        super(currentValue);\n        this.direction = direction;\n    }\n\n    /**\n     * @returns {Value}\n     */\n    execute() {\n        if (this.direction === NEXT_VALUE) {\n            return this.nextValue();\n        }\n\n        return this.prevValue();\n    }\n\n    /**\n     * @returns {Value}\n     */\n    nextValue() {\n        if (this.nextIsNull()) return null;\n\n        let nextValue = this.currentValue.nextValue;\n\n        if (this.isEmptyValue()) {\n            if (this.currentValue.prevValue) {\n                nextValue.setPrevValue(this.currentValue.prevValue);\n                nextValue.prevValue.nextValue = nextValue;\n            } else {\n                nextValue.prevValue = undefined;\n            }\n        } else {\n            nextValue.prevValue.cursor = false;\n        }\n\n        nextValue.cursor = true;\n\n        return this.setFraction(nextValue);\n    }\n\n    /**\n     * @returns {Value}\n     */\n    prevValue() {\n        if (this.isEmptyValue() && this.prevIsNull()) return null;\n\n        let prevValue = this.currentValue.prevValue;\n\n        if (this.prevIsNull()) {\n            prevValue = new Value(\"\");\n            prevValue.setNextValue(this.currentValue);\n        }\n\n        if (this.isEmptyValue()) {\n            if (this.currentValue.nextValue) {\n                this.currentValue.nextValue.setPrevValue(prevValue);\n                prevValue.nextValue = this.currentValue.nextValue;\n            } else {\n                prevValue.nextValue = undefined;\n            }\n        } else {\n            prevValue.nextValue.prevValue = prevValue;\n            prevValue.nextValue.cursor = false;\n        }\n\n        prevValue.cursor = true;\n\n        return this.setFraction(prevValue);\n    }\n\n    setFraction(value) {\n        let className = value.constructor.name;\n\n        if (className !== \"Fraction\") return value;\n        value.unfocus();\n\n        if (this.direction === PREV_VALUE && this.isEmptyValue()) {\n            value.setCursor(DIVIDER);\n            value.divider.focusLast();\n\n            return value;\n        }\n\n        if (this.direction === PREV_VALUE) {\n            let newValue = new Value('');\n            value.cursor = false;\n            value.setNextValue(newValue);\n            newValue.setPrevValue(value);\n            newValue.cursor = true;\n\n            return newValue;\n        }\n\n        value.setCursor(DIVIDEND);\n        value.dividend.focusFirst();\n\n        return value;\n    }\n}\n","import Value from \"../Value\";\nimport AddValue from \"./Commands/Value/AddValue\"\nimport ChangeValue from \"./Commands/Value/ChangeValue\";\n\nexport default class ValueStrategy {\n    /**\n     *\n     * @param {Value} currentValue\n     */\n    constructor(currentValue) {\n        this.currentValue = currentValue;\n    }\n\n    /**\n     *\n     * @param {Value} value\n     *\n     * @returns {Value}\n     */\n    addValue(value) {\n        let addValue = new AddValue(this.currentValue, value);\n        return addValue.execute();\n    }\n\n    /**\n     *\n     * @returns {any}\n     */\n    changeValue(direction) {\n        let changeValue = new ChangeValue(this.currentValue, direction);\n        return changeValue.execute();\n    }\n}\n","import BaseCommand from \"../BaseCommand\";\nimport Value from \"../../../Value\";\nimport Fraction, { DIVIDEND, DIVIDER } from \"../../../Fraction\";\nimport { NEXT_VALUE } from \"../../../ValueList\";\n\n\n/**\n * Get the current value\n *\n * @returns {Value}\n */\nconst getCurrentValue = (fraction) => {\n   let valueList = fraction.divider;\n\n   if (fraction.currentCursor === DIVIDEND) {\n       valueList = fraction.dividend;\n   }\n\n   return valueList.value;\n}\n\nexport default class ChangeValue extends BaseCommand {\n    /**\n     *\n     * @param {Fraction} fraction\n     * @param {string} direction\n     */\n    constructor(fraction, direction) {\n        super(getCurrentValue(fraction));\n        this.fraction = fraction;\n        this.direction = direction;\n    }\n\n    /**\n     *\n     */\n    execute() {\n        if (this.direction === NEXT_VALUE) {\n            return this.nextValue();\n        }\n\n        return this.prevValue();\n    }\n\n    /**\n     * set next value\n     *\n     * @returns {Fraction}\n     */\n    nextValue() {\n        if (this.isDividend()) {\n            if (this.nextIsNull()) {\n                this.fraction.unfocus();\n                this.fraction.setCursor(DIVIDER);\n            } else {\n                this.fraction.dividend.nextValue();\n            }\n\n            return this.fraction;\n        }\n\n        if (this.nextIsNull()) {\n            this.fraction.unfocus();\n            return null;\n        }\n\n        this.fraction.divider.nextValue();\n\n        return this.fraction;\n    }\n\n    /**\n     * set prev value\n     *\n     * @returns {Fraction}\n     */\n    prevValue() {\n        if (this.isDividend()) {\n            if (this.prevIsNull() && this.isEmptyValue()) {\n                this.fraction.unfocus();\n                return null;\n            }\n\n            this.fraction.dividend.prevValue();\n            return this.fraction;\n        }\n\n        if (this.prevIsNull()) {\n            if (this.isEmptyValue()) {\n                if (this.nextIsNull()) {\n                    this.fraction.divider = null;\n                } else {\n                    let value = this.fraction.divider.value;\n                    let next = value.nextValue;\n                    next.prevValue = null;\n                    this.fraction.divider.value = next;\n                    this.fraction.divider.focus();\n                    this.fraction.unfocus();\n                }\n\n                this.fraction.setCursor(DIVIDEND);\n            } else {\n                this.fraction.divider.prevValue();\n            }\n        } else {\n            this.fraction.divider.prevValue();\n        }\n\n        return this.fraction;\n    }\n\n    /**\n     * is dividend?\n     *\n     * @returns {boolean}\n     */\n    isDividend() {\n        return this.fraction.currentCursor === DIVIDEND;\n    }\n}\n","import ValueStrategy from \"./ValueStrategy\";\nimport Value from \"../Value\";\nimport { DIVIDEND, DIVIDER } from \"../Fraction\";\nimport ChangeValue from \"./Commands/Fraction/ChangeValue\";\nimport { NEXT_VALUE } from \"../ValueList\";\n\nexport default class FractionStrategy extends ValueStrategy {\n    /**\n     *\n     * @param {Value} value\n     */\n    addValue(value) {\n        if (this.currentValue.currentCursor === DIVIDER) {\n            this.currentValue.addDivider(value);\n        } else {\n            this.currentValue.addDividend(value);\n        }\n\n        return this.currentValue;\n    }\n\n    /**\n     *\n     * @returns {Value}\n     */\n    changeValue(direction) {\n        let command = new ChangeValue(this.currentValue, direction);\n        let result = command.execute();\n\n        if (result) return result;\n\n        if (direction === NEXT_VALUE) {\n            return this.changeToNext();\n        }\n\n        return this.changeToPrev();\n    }\n\n    /**\n     *\n     * @returns {Value}\n     */\n    changeToNext() {\n        let newValue = new Value('', this.currentValue);\n        newValue.cursor = true;\n\n        this.currentValue.setNextValue(newValue);\n\n        return newValue;\n    }\n\n    changeToPrev() {\n        if (this.currentValue.prevValue) {\n            this.currentValue.cursor = false;\n            this.currentValue.prevValue.cursor = true;\n\n            return this.currentValue.prevValue;\n        }\n\n        let newValue = new Value('');\n        newValue.setNextValue(this.currentValue);\n        newValue.cursor = true;\n\n        this.currentValue.setPrevValue(newValue);\n\n        return newValue;\n    }\n}\n","import ValueStrategy from \"./ValueStrategy\";\nimport FractionStrategy from \"./FractionStrategy\";\nimport Value from \"../Value\";\n\nexport default class ValueContext {\n    constructor (currentValue) {\n        this.currentValue = currentValue;\n    }\n\n    /**\n     *\n     * @param {Value} value\n     *\n     * @returns {Value}\n     */\n    addValue (value) {\n        return this.getStrategy().addValue(value);\n    }\n\n    /**\n     *\n     * @returns {any}\n     */\n    changeValue (direction) {\n        return this.getStrategy().changeValue(direction);\n    }\n\n    getStrategy () {\n        let className = this.currentValue\n            .constructor.name;\n\n        switch (className) {\n            case \"Fraction\":\n                return this.getFractionStrategy();\n            default:\n                return this.getValueStrategy();\n        }\n    }\n\n    /**\n     *\n     * @returns {FractionStrategy}\n     */\n    getFractionStrategy () {\n        return new FractionStrategy(this.currentValue);\n    }\n\n    /**\n     *\n     * @returns {ValueStrategy}\n     */\n    getValueStrategy () {\n        return new ValueStrategy(this.currentValue);\n    }\n}\n","import Value from \"./Value\";\nimport ValueContext from \"./Strategies/ValueContext\";\n\nexport const NEXT_VALUE = \"nextValue\";\nexport const PREV_VALUE = \"prevValue\";\n\nexport default class ValueList {\n    /**\n     *\n     * @param {Value} value\n     */\n    constructor(value) {\n        this.value = value;\n        this.boot();\n    }\n\n    /**\n     * Boot the instance\n     */\n    boot() {\n        if (!this.value.cursor) {\n            this.value.cursor = true;\n        }\n    }\n\n    /**\n     * set the current value to next value\n     */\n    nextValue() {\n        let value = this.getContext().changeValue(NEXT_VALUE);\n\n        if (value === null) return value;\n        this.value = value;\n\n        return true;\n    }\n\n    /**\n     * set the current value to prev value\n     */\n    prevValue() {\n        let value = this.getContext().changeValue(PREV_VALUE);\n\n        if (value === null) return value;\n        this.value = value;\n\n        return true;\n    }\n\n    /**\n     *  add value to list\n     *\n     * @param {Value} value\n     */\n    addValue(value) {\n        this.value = this.getContext().addValue(value);\n    }\n\n    /**\n     * unfocus value list\n     */\n    unfocus() {\n        this.value.cursor = false;\n    }\n\n    /**\n     * focus value list\n     */\n    focus() {\n        this.value.cursor = true;\n    }\n\n    /**\n     *\n     * @returns {ValueContext}\n     */\n    getContext()\n    {\n        return new ValueContext(this.value);\n    }\n\n    /**\n     * Focus last value\n     */\n    focusLast() {\n        this.unfocus();\n        this.value = this.last();\n        this.focus();\n    }\n\n    /**\n     * Focus first value\n     */\n    focusFirst() {\n        this.unfocus();\n        this.value = this.first();\n        this.focus();\n    }\n\n    /**\n     *  returns the last Value from list\n     *\n     * @returns {Value}\n     */\n    last() {\n        let value = this.value;\n        let nextValue = null;\n\n        while (nextValue = value.nextValue) {\n            value = nextValue;\n        }\n\n        return value;\n    }\n\n    /**\n     * returns the first Value from list\n     *\n     * @returns {Value}\n     */\n    first() {\n        let value = this.value;\n        let prevValue = null;\n\n        while (prevValue = value.prevValue) {\n            value = prevValue;\n        }\n\n        return value;\n    }\n}\n","export const LEFT = 37;\nexport const RIGHT = 39;\n","import React, { Component as ReactComponet } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport green from \"@material-ui/core/colors/green\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MathJax from \"react-mathjax\";\nimport Screen from \"../Screen\";\nimport ValueList from \"../Value/ValueList\";\n\nimport { LEFT, RIGHT } from \"../keyConsts\";\n\nconst styles = () => ({\n    container: {\n        backgroundColor: green[\"A200\"],\n    },\n});\n\nconst mathJaxConfig = {\n    tex2jax: {\n        inlineMath: []\n    },\n    showMathMenu: false,\n    showMathMenuMSIE: false,\n    \"fast-preview\": {\n        disabled: true\n    },\n    showProcessingMessages: false,\n    styles: {\n        \"#MathJax_Message\": {display: 'none'},\n        \"#MathJax_MSIE_Frame\": {display: 'none'}\n    }\n};\n\nclass Component extends ReactComponet {\n    static propTypes = {\n        keyboard: PropTypes.array.isRequired,\n        mapKeys: PropTypes.object.isRequired,\n        mapEvents: PropTypes.object.isRequired,\n        classes: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            valueList: null,\n        };\n\n        this.clickBuntton = this.clickBuntton.bind(this);\n        this.handleKeyUp = this.handleKeyUp.bind(this);\n        this.props.mapKeys.setCallback(this.clickBuntton);\n        this.props.mapKeys.setMap();\n        this.props.mapEvents.setMap();\n    }\n\n    clickBuntton(btn) {\n        let { mapEvents } = this.props;\n        let { valueList } = this.state;\n        let nextValue = mapEvents.get(btn)();\n\n        if (!valueList) {\n            valueList = new ValueList(nextValue);\n        } else {\n            valueList.addValue(nextValue);\n        }\n\n        this.setState({ valueList });\n    }\n\n    handleKeyUp({ keyCode }) {\n        let { valueList } = this.state;\n\n        if (keyCode == LEFT) {\n            valueList.prevValue();\n        } else if (keyCode == RIGHT) {\n            valueList.nextValue();\n        } else {\n            return;\n        }\n\n        this.setState({ valueList });\n    }\n\n    render() {\n        let { keyboard, mapKeys, classes } = this.props;\n        let { valueList } = this.state;\n\n        return (\n            <Paper onKeyUp={this.handleKeyUp}>\n                <MathJax.Provider options={mathJaxConfig}>\n                    <Screen screenValue={valueList} onKeyUp={this.handleKeyUp}/>\n                    <Grid container className={classes.container} spacing={0}>\n                        {keyboard.map(row => row.map(btn => (\n                            <Grid key={btn} item xs={Math.ceil(12/row.length)}>\n                                {mapKeys.get(btn)}\n                            </Grid>\n                        )))}\n                    </Grid>\n                </MathJax.Provider>\n            </Paper>\n        );\n    }\n}\n\nexport default withStyles(styles)(Component);\n","import React, { Component as ReactComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport MathJax from \"react-mathjax\";\n\nexport default class Component extends ReactComponent {\n    static propTypes = {\n        text: PropTypes.string.isRequired,\n        onClick: PropTypes.func.isRequired,\n        value: PropTypes.string.isRequired,\n        classes: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        const { onClick, value } = this.props;\n        onClick(value);\n    }\n\n    render() {\n        const { text, classes } = this.props;\n\n        return (\n            <Button className={classes.button} onClick={this.handleClick}>\n                <MathJax.Node formula={text} />\n            </Button>\n        );\n    }\n}\n","import { withStyles } from \"@material-ui/core/styles\";\nimport Component from \"./Component\";\n\nconst styles = () => ({\n    button: {\n        margin: 0,\n        width: \"100%\",\n        height: \"68px\",\n    },\n    input: {\n        display: \"none\",\n    },\n});\n\nexport default withStyles(styles)(Component);\n","import React from \"react\";\nimport Key from \"../Key\";\n\nexport class MapKeys {\n    constructor() {\n        this.map = new Map();\n    }\n\n    setCallback(callback) {\n        this.callback = callback;\n    }\n\n    get(key) {\n        return this.map.get(key);\n    }\n\n    set(key, val) {\n        return this.map.set(key, val);\n    }\n\n    getComponent(text, value) {\n        return (\n            <Key key={text + value} text={text} value={value} onClick={this.callback} />\n        );\n    }\n\n    setMap() {\n        this.setNumbersButtons();\n        this.set(\"=\", this.getComponent(\"=\", \"=\"));\n        this.set(\",\", this.getComponent(\",\", \",\"));\n        this.set(\"+\", this.getComponent(\"+\", \"+\"));\n        this.set(\"-\", this.getComponent(\"-\", \"-\"));\n        this.set(\"*\", this.getComponent(\"*\", \"*\"));\n        this.set(\"/\", this.getComponent(\"\\\\frac{x}{y}\", \"/\"));\n    }\n\n    setNumbersButtons() {\n        for (let index = 0; index <= 9; index++) {\n            this.set(\n                index.toString(),\n                this.getComponent(index.toString(), index.toString())\n            );\n        }\n    }\n}\n\nexport default new MapKeys();\n","import Value from \"./Value\";\n\nexport default class Dot extends Value {\n    constructor(prevValue) {\n        super(\".\", prevValue);\n    }\n\n    valueTeX() {\n        return \",\";\n    }\n}\n","import Value from \"./Value\";\n\nexport default class Operator extends Value {\n    value() {\n        return \" \" + this.operator;\n    }\n\n    getValue() {\n        if (!this.prevValue) {\n            return this.value() + \" \";\n        }\n\n        return this.prevValue.getValue() + this.value() + \" \";\n    }\n\n    getTeX() {\n        if (!this.prevValue) {\n            return this.valueTeX() + \" \";\n        }\n\n        return this.prevValue.getTeX() + this.valueTeX() + \" \";\n    }\n}\n","import Value from \"../Value/Value\";\nimport Fraction from \"../Value/Fraction\";\nimport Dot from \"../Value/Dot\";\nimport Operator from \"../Value/Operator\";\n\nclass MapEvents {\n    constructor() {\n        this.map = new Map();\n    }\n\n    set(key, callback) {\n        this.map.set(key, callback);\n    }\n\n    get(key) {\n        return this.map.get(key);\n    }\n\n    setMap() {\n        this.setNumbersButtons();\n        this.set(\"=\", (value) => (new Operator(\"=\", value)));\n        this.set(\",\", (value) => (new Dot(value)));\n        this.set(\"+\", (value) => (new Operator(\"+\", value)));\n        this.set(\"-\", (value) => (new Operator(\"-\", value)));\n        this.set(\"*\", (value) => (new Operator(\"*\", value)));\n        this.set(\"/\", (value) => (new Fraction(value)));\n    }\n\n    setNumbersButtons() {\n        for (let index = 0; index <= 9; index++) {\n            this.set(\n                index.toString(),\n                (value) => (new Value(index.toString(), value))\n            );\n        }\n    }\n}\n\nexport default new MapEvents();\n","export const defaultKeyboard = [\n    [\"1\", \"2\", \"3\", \"+\"],\n    [\"4\", \"5\", \"6\", \"-\"],\n    [\"7\", \"8\", \"9\", \"*\"],\n    [\",\", \"0\", \"=\", \"/\"],\n];\n","import React, { Component as ReactComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport defaultMapKeys from \"./MapKeys\";\nimport defaultMapEvents from \"./MapEvents\";\nimport { defaultKeyboard } from \"./keyboards\";\n\n\nexport default () => {\n    let mapKeys = defaultMapKeys;\n    let keyboard = defaultKeyboard;\n    let mapEvents = defaultMapEvents;\n\n    return (WrappedComponent) => class WithKeyboard extends ReactComponent {\n        static propTypes = {\n            keyboard: PropTypes.array,\n            mapKeys: PropTypes.object,\n            mapEvents: PropTypes.object,\n        };\n\n        render() {\n            let props = {keyboard, mapKeys, mapEvents, ...this.props};\n\n            return (\n                <WrappedComponent {...props} />\n            );\n        }\n    };\n};\n","import Component from \"./Component\";\nimport withKeyboard from \"./withKeyboard\";\n\nexport default withKeyboard()(Component);\n"],"names":["Math","props","state","handleOnRender","bind","timeCursor","value","setState","nextProps","load","setCursor","mathList","document","getElementsByClassName","el","mjxEls","mjx","innerHTML","style","fontSize","setInterval","visibility","parentElement","marginLeft","display","currentValue","React","getStyle","Component","propTypes","PropTypes","string","styles","Screen","screenValue","last","getTeX","classes","onKeyUp","root","Backspace","icon","screen","renderValue","object","isRequired","withStyles","Value","operator","prevValue","nextValue","cursor","setPrevValue","getValue","valueTeX","BaseCommand","undefined","AddValue","newValue","isEmptyValue","replaceValue","addValue","setNextValue","DIVIDER","DIVIDEND","Fraction","divider","toggleCursor","dividend","ValueList","currentCursor","unfocus","focusFirst","focusLast","length","setParentheses","getDividendValue","getDividerValue","getDividendTeX","getDividerTeX","ChangeValue","direction","NEXT_VALUE","nextIsNull","setFraction","prevIsNull","className","constructor","name","PREV_VALUE","ValueStrategy","execute","changeValue","getCurrentValue","fraction","valueList","isDividend","next","focus","FractionStrategy","addDivider","addDividend","command","result","changeToNext","changeToPrev","ValueContext","getStrategy","getFractionStrategy","getValueStrategy","boot","getContext","first","LEFT","RIGHT","green","mathJaxConfig","clickBuntton","handleKeyUp","mapKeys","setCallback","setMap","mapEvents","btn","get","keyCode","keyboard","container","map","row","ceil","ReactComponet","array","handleClick","onClick","text","button","ReactComponent","func","MapKeys","Map","callback","key","val","set","setNumbersButtons","getComponent","index","toString","Dot","Operator","MapEvents","defaultKeyboard","defaultMapKeys","defaultMapEvents","WrappedComponent","withKeyboard"],"mappings":"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"}